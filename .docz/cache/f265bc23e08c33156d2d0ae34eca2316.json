{"remainingRequest":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js!F:\\slate\\easteduCompoents\\src\\QuestionEditor\\editor\\richtextDetail.tsx","dependencies":[{"path":"F:\\slate\\easteduCompoents\\src\\QuestionEditor\\editor\\richtextDetail.tsx","mtime":1611716678673},{"path":"F:\\slate\\easteduCompoents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611297672593},{"path":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1611297676370},{"path":"F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1611297672218},{"path":"F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js","mtime":1599723087186}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/slate/easteduCompoents/src/QuestionEditor/editor/richtextDetail.tsx"],"names":["React","useState","useEffect","useSelected","useFocused","useSlate","Editor","Transforms","Node","iconObj","classNamesList","Button","Button2","Icon","SubscriptButton","TextIndentBtn","WordSpacing","WordSpace","SymbolIcon","InsertFormula","FormulaEditor","OrderSortButton","MarkColorBtn","MarkFontBtn","enlarge","narrow","deletes","cx","css","_","Element","props","attributes","children","element","obj2","wordBreak","whiteSpace","lineHeight","display","type","el","blockStyleList","Label","name","content","TextIndent","LineSpace","innerStyle","filter","styleItem","forEach","item","textAlign","cloneDeep","InserImage","console","log","value","editor","setValue","event","preventDefault","newValue","showValue","toggleImage","width","margin","isMarkActive","deletesMark","MentionElement","selected","focused","mediaType","verticalAlign","borderRadius","fontSize","textIndent","boxShadow","character","scale","__html","format","isADD","isActive","a","parent","selection","anchor","path","b","JSON","parse","stringify","removeNodes","match","n","pictureUrl","nImg","Image","src","onload","nWidth","setNodes","split","svgGenerator","color","str","base64","btoa","unescape","encodeURIComponent","dotSvgGenerator","Leaf","leaf","text","classNames","styleData","highlight","background","UnderlineWave","join","EmphasisDot","Strike","Font","fontFamily","FontSize","Wordspace","letterSpacing","toggleMark","removeMark","addMark","toggleMarkVertAlign","LIST_TYPES","styleList","toggleBlock","num","isBlockActive","includes","toggleSort","isSortActive","isList","unwrapNodes","block","wrapNodes","marks","velue","focus","offset","aBefore","isMarkList","formatList","o","length","nodes","isMarks","getFilterChildren","pathList","index","newItem","e","i","every","isAlignmentActive","selectTionNode","isUnorderedSortActive","isBlockActiveNum","itemList","MarkIcon","title","icon","MarkVertAlign","MarkSubscript","MarkNode","MarkTextIndent","unit","MarkWordSpace","MarkWordSpacing","geta","id","Symbol","isFocuse","setVisible","postion","modalPosition","MarkInsertFormula","changeFocuse","MarkFormulaEditor","MarkAlignment","UnorderedSorting","OrderSorting","sortFormat","setFormat","MarkColor","changeColor","MarkFont","fontList","fontObj","defluteVal"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, {useCallback, useMemo, useState, useEffect} from 'react';\r\nimport {\r\n\r\n  useSelected,\r\n  useFocused,\r\n  useSlate,\r\n} from 'slate-react';\r\nimport {Editor, Transforms, Node, createEditor} from 'slate';\r\nimport {\r\n  iconObj,\r\n  // LIST_TYPES,\r\n  showStyle,\r\n  showNode,\r\n  classNamesList,\r\n  fontSizeList,\r\n} from './client';\r\nimport {Button, Button2, Icon} from './components';\r\nimport SubscriptButton from './iconCompents/subscript';\r\n// @ts-ignore\r\nimport TextIndentBtn from './iconCompents/textIndent';\r\nimport WordSpacing from './iconCompents/WordSpacing';\r\nimport WordSpace from './iconCompents/WordSpace';\r\nimport SymbolIcon from './iconCompents/symbol';\r\nimport InsertFormula from './iconCompents/InsertFormula';\r\nimport FormulaEditor from './iconCompents/FormulaEditor';\r\nimport OrderSortButton from './iconCompents/OrderSort';\r\nimport MarkColorBtn from './iconCompents/MarkColorBtn';\r\nimport MarkFontBtn from './iconCompents/MarkFontBtn';\r\n// @ts-ignore\r\nimport enlarge from './Icon/icon-enlarge.png';\r\n// @ts-ignore\r\nimport narrow from './Icon/icon-narrow.png';\r\n// @ts-ignore\r\nimport deletes from './Icon/icon-deletes.png';\r\nimport {cx, css} from 'emotion';\r\n\r\n\r\nimport _ from 'lodash';\r\n// @ts-ignore\r\nimport {formulaEditor} from \"@/components/Editltem1/toolbarIcon\";\r\n\r\n\r\nexport const Element = (props: any) => {\r\n\r\n  let {attributes, children, element} = props;\r\n\r\n  let obj2: any = {\r\n    wordBreak: 'break-all',\r\n    whiteSpace: 'pre-wrap',\r\n    lineHeight: '1.5',\r\n    display: element.type === 'mention' ? 'inline-block' : 'block'\r\n  }; // 默认1.5倍行距\r\n  let el;\r\n\r\n  let blockStyleList = [\r\n    {\r\n      Label: 'TextIndent',\r\n      name: 'textIndent',\r\n      content: `${element.TextIndent}em`\r\n    },\r\n    {\r\n      Label: 'LineSpace',\r\n      name: 'lineHeight',\r\n      content: `${element.LineSpace * 1.5}`\r\n    }\r\n  ];\r\n\r\n  let innerStyle = _.filter(blockStyleList, (styleItem) => {\r\n    return element[styleItem['Label']];\r\n  });\r\n\r\n\r\n  innerStyle.forEach((item: any) => {\r\n    if (element.type !== 'mention') {\r\n      obj2[item.name] = item.content;\r\n    } else {\r\n      obj2['textIndent'] = '0px';\r\n    }\r\n  });\r\n\r\n  switch (element.type) {\r\n    case 'mention':\r\n      return <MentionElement {...props} />;\r\n    case 'Right':\r\n      el = <div {...attributes} style={{textAlign: 'right'}}>{children}</div>;\r\n      break;\r\n    case 'Center':\r\n      el = <div {...attributes} style={{textAlign: 'center'}}>{children}</div>;\r\n      break;\r\n    case 'Left':\r\n      el = <div {...attributes} style={{textAlign: 'left'}}>{children}</div>;\r\n      break;\r\n    case 'space':\r\n      el = <span {...attributes} style={{textAlign: 'left'}}>{children}</span>;\r\n      break;\r\n    case 'Both':\r\n      el = <div {...attributes} style={{textAlign: 'justify'}}>{children}</div>;\r\n      break;\r\n    default:\r\n      el = <span {...attributes}>{children}</span>;\r\n      break;\r\n  }\r\n\r\n  if (element['ListItem']) {\r\n    return <li {...attributes}>\r\n      <div style={{...obj2, textAlign: element.type}}>{children}</div>\r\n    </li>;\r\n  } else if (element['NumberedList'] === 'None') {\r\n    return <ul {...attributes}>{children}</ul>;\r\n\r\n  } else if (element['NumberedList']) {\r\n    return <ol {...attributes} type={element['NumberedList']}>{children}</ol>;\r\n  }\r\n\r\n  el = <div style={_.cloneDeep(obj2)}>{el}</div>;\r\n\r\n  return el;\r\n};\r\n\r\nconst InserImage = (props: any) => {\r\n\r\n  console.log('value====>', props.value);\r\n  const editor = useSlate();\r\n  const [value, setValue] = useState(props.value);\r\n  // let value = props.value;\r\n\r\n  useEffect(() => {\r\n\r\n    setValue(props.value);\r\n\r\n  }, [props.value])\r\n\r\n  return (<div\r\n    className=\"editingImg\"\r\n  >\r\n    {\r\n      // @ts-ignore\r\n      <Button2\r\n        onMouseDown={(event: any) => {\r\n          event.preventDefault();\r\n          let newValue = (value * 10 - 1) / 10;\r\n          let showValue = newValue >= 0.1 ? newValue : 0.1;\r\n          toggleImage(editor, showValue);\r\n        }}\r\n      >\r\n        <img src={narrow} alt=\"\"/>\r\n      </Button2>\r\n    }\r\n\r\n\r\n    <Button2\r\n      // width={100}\r\n      style={{\r\n        width: '45x',\r\n        margin: '0 1px'\r\n      }}\r\n      active={isMarkActive(editor, 'widthMore')}\r\n      onMouseDown={(event: any) => {\r\n        event.preventDefault();\r\n\r\n        toggleImage(editor, 1);\r\n      }}\r\n    >\r\n\r\n      <div className=\"Original buttonTitle\">\r\n        1:1\r\n      </div>\r\n    </Button2>\r\n\r\n    <Button2\r\n      active={isMarkActive(editor, 'widthMore')}\r\n      onMouseDown={event => {\r\n        event.preventDefault();\r\n\r\n        let newValue = (value * 10 + 1) / 10;\r\n        let showValue = newValue <= 2 ? newValue : 2;\r\n\r\n        toggleImage(editor, showValue);\r\n      }}\r\n    >\r\n      <img src={enlarge} alt=\"\"/>\r\n    </Button2>\r\n    <span className=\"Separate1\"></span>\r\n    <Button2\r\n      active={isMarkActive(editor, 'width')}\r\n      onMouseDown={(event: any) => {\r\n        event.preventDefault();\r\n        deletesMark(editor, 'width', 'd');\r\n      }}\r\n    >\r\n      <img src={deletes} alt=\"\"/>\r\n    </Button2>\r\n  </div>);\r\n};\r\n\r\n\r\nexport const MentionElement = (props: any) => {\r\n\r\n  const {attributes, children, element} = props;\r\n  const selected = useSelected();\r\n  const focused = useFocused();\r\n\r\n  // console.error('selected===>', selected);\r\n  // console.error('focused===>', focused);\r\n\r\n\r\n  if (element.mediaType === 'IMAGE') {\r\n    return (\r\n      <span\r\n        {...attributes}\r\n        contentEditable={false}\r\n        className={selected && focused ? \"dimback\" : ''}\r\n        style={{\r\n          // padding: '3px 3px 2px',\r\n          margin: '0 1px',\r\n          verticalAlign: 'baseline',\r\n          display: 'inline-block',\r\n          borderRadius: '4px',\r\n          fontSize: '0.9em',\r\n          textIndent: '0em',\r\n          // border: '1px solid black',\r\n          boxShadow: selected && focused ? '0 0 0 2px #B4D5FF' : 'none',\r\n          // background: selected && focused ? '0 0 0 2px #B4D5FF' : 'none',\r\n        }}\r\n      >\r\n                {children}\r\n        <img className=\"opacityImag\" src={element.character} alt=\"\"\r\n          style={element.width ? {width: element.width + 'px'} : {}}/>\r\n        {\r\n          selected && focused ? <InserImage\r\n            value={element.scale || 1}\r\n          /> : ''\r\n        }\r\n            </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        {...attributes}\r\n        contentEditable={false}\r\n        style={{\r\n\r\n          margin: '0 1px',\r\n          verticalAlign: 'baseline',\r\n          display: 'inline-block',\r\n          borderRadius: '4px',\r\n          fontSize: '0.9em',\r\n          textIndent: '0em',\r\n          boxShadow: selected && focused ? '0 0 0 2px #B4D5FF' : 'none',\r\n        }}\r\n      >\r\n                {children}\r\n        <span contentEditable={false} dangerouslySetInnerHTML={{__html: element.character}}></span>\r\n            </span>\r\n    );\r\n  }\r\n\r\n\r\n};\r\n\r\n// 删除图片\r\nconst deletesMark = (editor: any, format: any, isADD?: any) => {\r\n  const isActive = isMarkActive(editor, format);\r\n\r\n  let a = Node.parent(editor, editor.selection.anchor.path);\r\n  let b = JSON.parse(JSON.stringify(a));\r\n\r\n  Transforms.removeNodes(editor, {\r\n    match: (n) => n.type === 'mention'\r\n  });\r\n\r\n};\r\n\r\nconst toggleImage = (editor: any, value: any, isADD?: any) => {\r\n\r\n  if (editor.selection) {\r\n    let a = Node.parent(editor, editor.selection.anchor.path);\r\n    let b = JSON.parse(JSON.stringify(a));\r\n    let pictureUrl = a.character;\r\n    let nImg: any = new Image();\r\n    nImg.src = pictureUrl;\r\n\r\n    nImg.onload = function () {\r\n      let nWidth = nImg.width;\r\n\r\n      Transforms.setNodes(\r\n        editor,\r\n        {'width': nWidth * value, scale: value},\r\n        {match: (n) => n.type === 'mention', split: true}\r\n      );\r\n\r\n    };\r\n  }\r\n\r\n};\r\n// 波浪线图片生成\r\nconst svgGenerator = (color: string = '#000000') => {\r\n  const str = `<svg width=\"20\" height=\"5\" xmlns=\"http://www.w3.org/2000/svg\"><g><rect fill=\"none\" height=\"7\" width=\"22\" y=\"-1\" x=\"-1\"/></g><g><g fillRule=\"evenodd\" fill=\"none\"><g stroke=\"null\" fillRule=\"nonzero\" fill=\"#979797\"><path fill=\"${color}\" stroke=\"null\" d=\"m-0.238096,3.613095c0.836461,0 1.286668,0.150872 2.073605,0.599413l0.143688,0.082051c1.004851,0.57273 1.712047,0.800678 2.992583,0.800678c1.25625,0 1.860909,-0.21038 2.759285,-0.783392l0.041634,-0.02656c0.796739,-0.508044 1.279382,-0.672191 2.408958,-0.672191c1.120354,0 1.560544,0.154667 2.330839,0.665991l0.004108,0.002727c0.899552,0.597131 1.516811,0.813425 2.874929,0.813425c1.381444,0 1.927945,-0.232395 2.54929,-0.851071l0.002285,-0.002273c0.492482,-0.490372 0.816745,-0.628799 1.914034,-0.628799l0,-0.494048c-1.371522,0 -1.913007,0.23116 -2.533303,0.848799l-0.002285,0.002273c-0.493353,0.491237 -0.822193,0.631072 -1.930021,0.631072c-1.131154,0 -1.576159,-0.155936 -2.34865,-0.668718l-0.004116,-0.002732c-0.897282,-0.595619 -1.509398,-0.810693 -2.857111,-0.810693c-1.350571,0 -2.001583,0.221407 -2.924557,0.809952l-0.041709,0.0266c-0.77264,0.492817 -1.211736,0.645592 -2.243611,0.645592c-1.071501,0 -1.625281,-0.178499 -2.507737,-0.681465l-0.143681,-0.082046c-0.909176,-0.518216 -1.507225,-0.718632 -2.558459,-0.718632l0,0.494048z\"/></g></g></g></svg>`;\r\n  const base64 = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(str)));\r\n  return base64;\r\n}\r\n// 着重号图片生成\r\nconst dotSvgGenerator = (color: string) => {\r\n  const str = `<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"><svg class=\"icon\" width=\"16px\" height=\"12.00px\" viewBox=\"0 0 1365 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"${color}\" d=\"M682.666667 563.2m-85.333334 0a85.333333 85.333333 0 1 0 170.666667 0 85.333333 85.333333 0 1 0-170.666667 0Z\"/></svg>`;\r\n  const base64 = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(str)));\r\n  return base64;\r\n}\r\n\r\n\r\nexport const Leaf = (props: any) => {\r\n\r\n  let {attributes, children, leaf} = props;\r\n  // 加粗\r\n  const {text, parent} = children;\r\n  let classNames = classNamesList.filter((item) => {\r\n    return leaf[item];\r\n  });\r\n\r\n  let styleData: any = {};\r\n\r\n  if (leaf.highlight) {\r\n    styleData = {\r\n      background: `${'#FF4E4EFF'}`,\r\n      color: `${'#FFFF00'}`\r\n    }\r\n\r\n    children = <span style={styleData}>{children}</span>;\r\n  }\r\n  // 波浪线颜色\r\n  if (leaf.UnderlineWave && leaf.color) {\r\n    children = <span\r\n      className={cx(classNames.join(' '), css`background-image: url(${svgGenerator(leaf.color)})`)}\r\n    >\r\n            {children}\r\n        </span>;\r\n  } else {\r\n    children = <span\r\n      className={classNames.join(' ')}\r\n    >\r\n            {children}\r\n        </span>;\r\n  }\r\n  // // 着重字 跟字体颜色一致\r\n  // // let rate = leaf.FontSize ? (28/leaf.FontSize) : 1; // !计算字体字号的大小 影响\r\n  // if (leaf.EmphasisDot) {\r\n  //     // if(leaf.FontSize >= 24){\r\n  //     //     children = <span className={cx(\"EmphasisDot1\",css`background-image: url(${dotSvgGenerator(leaf.color)});\r\n  //     //     background-size: ${leaf.Wordspace ? Number(leaf.Wordspace)*rate+1 : 1}em ${rate}em;\r\n  //     //     background-position-x:${leaf.Wordspace ? 1+(Number(leaf.Wordspace))*0.5*rate : 0}em`)}>{children}</span>;\r\n  //     // }else{ // 小5特殊处理\r\n  //     //     children = <span className={cx(\"EmphasisDot1\",css`background-image: url(${dotSvgGenerator(leaf.color)});\r\n  //     //     background-size: ${(leaf.Wordspace ? Number(leaf.Wordspace)*rate+1 : 1)*12}px ${rate*12}px;\r\n  //     //     background-position-x:${(leaf.Wordspace ? 1+(Number(leaf.Wordspace))*0.5*rate : 0)*12}px`)}>{children}</span>;\r\n  //     // }\r\n  //     children = <span className=\"EmphasisDot1\">{children}</span>\r\n  // }\r\n\r\n  // 着重字 跟字体颜色一致\r\n  if (leaf.EmphasisDot && leaf.color) {\r\n    children = <span\r\n      className={cx(\"EmphasisDot1\", css`background-image: url(${dotSvgGenerator(leaf.color)});`)}>{children}</span>;\r\n  } else if (leaf.EmphasisDot) {\r\n    children = <span className=\"EmphasisDot1\">{children}</span>;\r\n  }\r\n\r\n  if (leaf.Strike) {\r\n    children = <span className=\"Strike\">{children}</span>;\r\n  }\r\n\r\n  // 显示颜色\r\n  if (leaf.color) {\r\n    children = <span style={{color: leaf.color}}>{children}</span>;\r\n  }\r\n\r\n  // 显示字体\r\n  if (leaf.Font) {\r\n    children = <span style={{fontFamily: leaf.Font}}>{children}</span>;\r\n  }\r\n\r\n  // 显示字号\r\n  if (leaf.FontSize) {\r\n    children = <span style={{fontSize: `${leaf.FontSize / 2}px`}}>{children}</span>;\r\n  }\r\n\r\n  if (leaf.Wordspace) {\r\n    children = <span style={{letterSpacing: `${leaf.Wordspace}em`}}>{children}</span>;\r\n  }\r\n\r\n  // console.log('leaf==>', leaf);\r\n  // console.log('children==>', children);\r\n\r\n\r\n  return <span\r\n    {...attributes}\r\n    // style={styleData}\r\n  >{children}</span>;\r\n};\r\n\r\n\r\nconst toggleMark = (editor: any, format: any) => {\r\n  const isActive = isMarkActive(editor, format);\r\n\r\n  if (isActive) {\r\n    Editor.removeMark(editor, format);\r\n  } else {\r\n    Editor.addMark(editor, format, true);\r\n  }\r\n};\r\n\r\nconst toggleMarkVertAlign = (editor, format) => {\r\n  const isActive = isMarkActive(editor, format);\r\n\r\n  Editor.removeMark(editor, 'VertAlignSubscript');\r\n  Editor.removeMark(editor, 'VertAlignSuperscript');\r\n\r\n  if (isActive) {\r\n    Editor.removeMark(editor, format);\r\n  } else {\r\n    Editor.addMark(editor, format, true);\r\n  }\r\n};\r\n\r\nconst LIST_TYPES = ['NumberedList', 'BulletedList'];\r\nconst styleList = ['Left', 'Center', 'Right'];\r\n\r\nconst toggleBlock = (editor, format, num) => {\r\n  const isActive = isBlockActive(editor, format);\r\n\r\n  // 判断是否是居左居中居右的样式\r\n  if (styleList.includes(format)) {\r\n    Transforms.setNodes(editor, {\r\n      type: format,\r\n    });\r\n  }\r\n};\r\n\r\nconst toggleSort = (editor, format, num) => { // tslint:disable-line\r\n\r\n  const isActive = isSortActive(editor, format);\r\n  const isList = LIST_TYPES.includes(format);\r\n\r\n  Transforms.unwrapNodes(editor, {\r\n    match: n => n[format],\r\n    split: true,\r\n  });\r\n\r\n  console.log(isActive);\r\n\r\n  Transforms.setNodes(editor, {\r\n    'ListItem': isActive ? false : isList ? true : format,\r\n  });\r\n\r\n  if (!isActive && isList) {\r\n    const block = {[format]: 'None', children: []};\r\n    Transforms.wrapNodes(editor, block);\r\n  }\r\n};\r\n\r\n\r\nconst isMarkActive = (editor, format) => {\r\n  const marks = Editor.marks(editor);\r\n  let selection = editor.selection;\r\n  let velue = editor.children;\r\n\r\n  if (selection && JSON.stringify(selection.anchor) === JSON.stringify(selection.focus)) {\r\n    let path = selection.focus.path;\r\n    let offset = selection.focus.offset;\r\n\r\n    let aBefore = path[1] > 1 ? velue[path[0]]['children'][path[1] - 1] : {};\r\n    let a = velue[path[0]]['children'][path[1]];\r\n\r\n    if ((aBefore.type === 'mention' || aBefore.type === 'space' || a.type === 'mention') && offset === 0) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  return marks ? marks[format] === true : false;\r\n};\r\n\r\n// 判断是否包含该样式\r\nconst isMarkList = (editor, formatList) => {\r\n  const marks = Editor.marks(editor);\r\n  let a = _.filter(formatList, (o) => {\r\n    return marks && marks[o];\r\n  });\r\n\r\n  return marks ? a && a.length > 0 : false;\r\n};\r\n\r\nconst isBlockActive = (editor, format) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n => {\r\n      return n.type === format || n[format];\r\n    },\r\n  });\r\n\r\n  return !!match;\r\n};\r\n\r\n// 判断是否是全部选择\r\nexport const isSortActive = (editor, format) => {\r\n\r\n\r\n  let {selection, children} = editor;\r\n  let isMarks = false;\r\n  if (selection) {\r\n    let {anchor, focus} = selection;\r\n    isMarks = getFilterChildren(children, [anchor.path, focus.path]);\r\n  }\r\n\r\n  return isMarks;\r\n\r\n};\r\n\r\nconst getFilterChildren = (item, pathList, index = 0) => {\r\n\r\n  let newItem = item.filter((e, i) => {\r\n\r\n    return i >= pathList[0][index] && i <= pathList[1][index];\r\n  });\r\n\r\n  return newItem.every((e) => e['NumberedList'] === 'None');\r\n};\r\n\r\n\r\n// 获取对齐选中状态\r\nconst isAlignmentActive = (editor, format) => {\r\n\r\n  let {selection, children} = editor;\r\n  let selectTionNode = '';\r\n\r\n  if (selection) {\r\n    let {anchor, focus} = selection;\r\n\r\n    if (!children[anchor.path[0]]['NumberedList']) {\r\n      selectTionNode = children[anchor.path[0]];\r\n    } else {\r\n      selectTionNode = children[anchor.path[0]].children[anchor.path[1]];\r\n    }\r\n  }\r\n\r\n  return selectTionNode ? selectTionNode.type === format : false;\r\n};\r\n\r\n// 获取无序排序的选中\r\nconst isUnorderedSortActive = (editor, format) => {\r\n\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n => {\r\n      return n[format] === 'None';\r\n    },\r\n  });\r\n\r\n  return !!match;\r\n};\r\n\r\n\r\n// 获取选中的数据\r\nconst isBlockActiveNum = (editor, format, itemList) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n => {\r\n      return n.type === format || n[format];\r\n    },\r\n  });\r\n\r\n  if (!!match) {\r\n    return match[0][format];\r\n  } else {\r\n    return itemList[0];\r\n  }\r\n\r\n};\r\n\r\n\r\nexport const MarkIcon = (props) => {\r\n\r\n  const {format, title, icon} = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className=\"tabbarIcon\"\r\n        active={isMarkActive(editor, format)}\r\n        onMouseDown={(event) => {\r\n          event.preventDefault();\r\n          toggleMark(editor, format);\r\n        }}\r\n      >\r\n        {props['icon']}\r\n        <span className=\"title\" style={{width: `${title && title.length * 18}px`}}>\r\n                    {title}\r\n                </span>\r\n      </Button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MarkVertAlign = (props) => {\r\n\r\n  const {format, icon, title} = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className=\"tabbarIcon\"\r\n        active={isMarkActive(editor, format)}\r\n        onMouseDown={(event) => {\r\n          event.preventDefault();\r\n          toggleMarkVertAlign(editor, format);\r\n        }}\r\n      >\r\n        {props['icon']}\r\n        <span className=\"title\" style={{width: `${title && title.length * 18}px`}}>\r\n                    {title}\r\n                </span>\r\n      </Button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MarkSubscript = (props) => {\r\n\r\n\r\n  const {format, title, icon} = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <div>\r\n      <SubscriptButton\r\n        active={isMarkList(editor, [\r\n          'UnderlineSingle',\r\n          'UnderlineDouble',\r\n          'UnderlineDotted',\r\n          'UnderlineWave'])}\r\n        editor={editor}\r\n        title={title}\r\n      ></SubscriptButton>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport const MarkNode = (props) => {\r\n\r\n  const {format, icon} = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className=\"tabbarIcon\"\r\n        active={isBlockActive(editor, format)}\r\n        onMouseDown={(event) => {\r\n          event.preventDefault();\r\n          toggleBlock(editor, format);\r\n        }}\r\n      >\r\n        {iconObj[props['icon']]}\r\n\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MarkTextIndent = (props) => {\r\n\r\n  const {format, icon, itemList, unit, title} = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <TextIndentBtn\r\n      active={isBlockActiveNum(editor, format, itemList)}\r\n      format={format}\r\n      icon={icon}\r\n      itemList={itemList}\r\n      unit={unit}\r\n      editor={editor}\r\n      title={title}\r\n    ></TextIndentBtn>\r\n\r\n  );\r\n};\r\n\r\nexport const MarkWordSpace = (props) => {\r\n\r\n  const {format, icon, itemList, unit, title} = props;\r\n  const editor = useSlate();\r\n  return (\r\n    <WordSpace\r\n      active={isBlockActiveNum(editor, format, itemList)}\r\n      format={format}\r\n      icon={icon}\r\n      itemList={itemList}\r\n      unit={unit}\r\n      editor={editor}\r\n      title={title}\r\n    ></WordSpace>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport const MarkWordSpacing = (props) => {\r\n\r\n  const {format, icon, title, geta, id} = props;\r\n  const editor = useSlate();\r\n  return (\r\n    <WordSpacing\r\n      active={isMarkActive(editor, format)}\r\n      format={format}\r\n      icon={icon}\r\n      editor={editor}\r\n      title={title}\r\n      id={id}\r\n      geta={() => geta()}\r\n      changeVal={(e) => {\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const Symbol = (props) => {\r\n  const {isFocuse, setVisible, postion, title, modalPosition, id} = props;\r\n  const editor = useSlate();\r\n\r\n  // console.log(isFocuse);\r\n\r\n  return (<SymbolIcon\r\n    editor={editor}\r\n    title={title}\r\n    isFocuse={isFocuse}\r\n    setVisible={setVisible}\r\n    postion={postion}\r\n    modalPosition={modalPosition}\r\n  />);\r\n\r\n};\r\n\r\nexport const MarkInsertFormula = (props) => {\r\n  const {isFocuse, setVisible, postion, title, modalPosition, changeFocuse} = props;\r\n  const editor = useSlate();\r\n\r\n  // console.log(editor);\r\n\r\n  return (<InsertFormula\r\n    editor={editor}\r\n    title={title}\r\n    isFocuse={isFocuse}\r\n    setVisible={setVisible}\r\n    postion={postion}\r\n    modalPosition={modalPosition}\r\n    changeFocuse={changeFocuse}\r\n  />);\r\n};\r\n\r\nexport const MarkFormulaEditor = (props) => {\r\n  const {isFocuse, setVisible, postion, title, modalPosition, changeFocuse} = props;\r\n  const editor = useSlate();\r\n\r\n  return (<FormulaEditor\r\n    editor={editor}\r\n    title={title}\r\n    isFocuse={isFocuse}\r\n    setVisible={setVisible}\r\n    postion={postion}\r\n    modalPosition={modalPosition}\r\n    changeFocuse={changeFocuse}\r\n  />);\r\n};\r\n\r\nexport const MarkAlignment = (props) => {\r\n\r\n  const {format, icon, title} = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className=\"tabbarIcon\"\r\n        active={isAlignmentActive(editor, format)}\r\n        onMouseDown={(event) => {\r\n          event.preventDefault();\r\n          toggleBlock(editor, format);\r\n        }}\r\n      >\r\n        {icon}\r\n        <span className=\"title\" style={{width: `${props.title && props.title.length * 18}px`}}>\r\n                    {props.title}\r\n                </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 设置无序排序\r\n\r\nexport const UnorderedSorting = ({format, icon, title}) => {\r\n  const editor = useSlate();\r\n  return (\r\n    <div className=\"LowerTriangle\">\r\n      <Button\r\n        className=\"tabbarIcon\"\r\n        style={{borderRadius: '2px 0px 0px 2px'}}\r\n        active={isSortActive(editor, format)}\r\n        onMouseDown={(event: any) => {\r\n          event.preventDefault();\r\n          toggleSort(editor, format, 'null');\r\n        }}\r\n      >\r\n        <Icon>{icon}</Icon>\r\n        <span className=\"title\" style={{width: `${title && title.length * 18}px`}}>\r\n                    {title}\r\n                </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const OrderSorting = (props) => {\r\n\r\n  const {format, title, sortFormat, setFormat} = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <div>\r\n      <OrderSortButton\r\n        editor={editor}\r\n        format={format}\r\n        title={title}\r\n        sortFormat={sortFormat}\r\n        setFormat={setFormat}\r\n      ></OrderSortButton>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport const MarkColor = (props) => {\r\n\r\n  const {format, title, changeColor, color} = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <div>\r\n      <MarkColorBtn\r\n        editor={editor}\r\n        format={format}\r\n        title={title}\r\n        color={color}\r\n        changeColor={changeColor}\r\n      ></MarkColorBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MarkFont = (props) => {\r\n\r\n  const {\r\n    format,\r\n    fontList,\r\n    fontObj,\r\n    width,\r\n    defluteVal,\r\n    title\r\n  } = props;\r\n  const editor = useSlate();\r\n\r\n  return (\r\n    <div>\r\n      <MarkFontBtn\r\n        editor={editor}\r\n        format={format}\r\n        fontList={fontList}\r\n        fontObj={fontObj}\r\n        width={width}\r\n        defluteVal={defluteVal}\r\n        title={title}\r\n      ></MarkFontBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\n"]}]}
{"remainingRequest":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js!F:\\slate\\easteduCompoents\\src\\QuestionEditor\\editor\\index.tsx","dependencies":[{"path":"F:\\slate\\easteduCompoents\\src\\QuestionEditor\\editor\\index.tsx","mtime":1611712276669},{"path":"F:\\slate\\easteduCompoents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611297672593},{"path":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1611297676370},{"path":"F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1611297672218},{"path":"F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js","mtime":1599723087186}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/slate/easteduCompoents/src/QuestionEditor/editor/index.tsx"],"names":["React","Component","RichText","ChoiceAnswer","JudgementAnswer","Tips","showMathJax","getQuestionHtml","getEmptyOption","questionTypeText","optionValue","getVideoUrl","debounce","_","TabPane","EditItem","hasError","props","changChild","console","error","changeValue","value","indexArr","ei","questionType","handleBatchOk","n","state","questionItem","questionStructure","isChangeQuestionList","type","videoUrl","JSON","parse","stringify","questionList","map","item","index","newQuestionItem","question","errList","length","open","message","errKey","filter","e","undefined","setState","activeKey","content","stem","push","alignment","fragments","mediaType","styles","indentation","questions","Object","keys","key","hasOwnProperty","element","handOkVal","chooseBox","newQuestionStructure","i","isChoose","readOnly","setAnswer","isFilled","log","changeAnswer","deleteOption","newQuestionStructures","isOnlyOption","indexOf","newQuestionStructure1","callback","postion","modalPosition","positionInsertFormula","modalPositionInsertFormula","changeItem","option","cloneDeep","children","text","calcelAnswers","el","eli","isAnswer","getAnswerStructure","setAnswers","contentItem","addAnswers","contents","autoFocus","splice","isAdd","String","Math","random","replace","requireText","deleteAnswers","result","character","includes","questionRenderCompleted","answer","orderSortVisible","visible","ActiveKey","left","top","color","sortFormat","isInBox","document","getElementById","addEventListener","preventDefault","stopPropagation","nextProps","time","search","renderDom","require","isFistRich","isChoice","copyQuestionMode","renderDOM","topicContent","title","cancelCopy","RichTextRender","isError"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Tabs, Button, Spin } from 'antd';\r\n\r\nimport RichText from './richtext';\r\nimport ChoiceAnswer from './choiceAnswer';\r\n\r\nimport JudgementAnswer from './components/JudgementAnswer';\r\n// import { Tips } from '../index';\r\nimport { Tips } from '../../MessageTips';\r\nimport {\r\n    changeJson,\r\n    showMathJax,\r\n    getQuestion,\r\n    getQuestionHtml,\r\n    getEmptyOption,\r\n    questionTypeText,\r\n    optionValue,\r\n    questionType,\r\n    getVideoUrl\r\n} from './client';\r\n\r\nimport debounce from 'lodash/debounce';\r\nimport './richtext.less';\r\nimport _ from 'lodash';\r\n\r\nconst { TabPane } = Tabs;\r\n// import LoadMath from './loadMath/index';\r\n\r\nexport interface EditItemProps {\r\n\r\n    value: any;\r\n    // changeValue: Function;\r\n    type: any;\r\n    handOkVal?: Function;\r\n    // onRef: Function;\r\n    questionStructure: any;\r\n    changeValue?: Function;\r\n    changeAnswer: Function;\r\n    cancelCopy?: Function;\r\n    search: any;\r\n    copyQuestionMode?: any;\r\n    renderDOM?: any\r\n}\r\n\r\ninterface EditItemState {\r\n\r\n    questionRenderCompleted: boolean\r\n    questionItem: any;\r\n    // initVal: any;\r\n    questionStructure: any;\r\n    type: any;\r\n    // value: any;\r\n    activeKey: string;\r\n    answer: any;\r\n    errList: any;\r\n    isChangeQuestionList: any;\r\n    hasError: boolean;\r\n    orderSortVisible: boolean;\r\n    modalPosition: any;\r\n    modalPositionInsertFormula: any;\r\n    color: string;\r\n    sortFormat: string;\r\n    isInBox: boolean; // 是否聚焦在输入框内\r\n    videoUrl: {\r\n        content: string;\r\n        questions: any\r\n    };\r\n    // questionObject: any;\r\n}\r\n\r\nimport ErrorBoundary from './errorBoundary';\r\nexport default class EditItem extends Component<EditItemProps, EditItemState> {\r\n\r\n    static getDerivedStateFromError() {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n\r\n        // let initVal = changeJson(props.value.question.stem);\r\n        let videoUrl = getVideoUrl(props.value.question);\r\n\r\n        this.state = {\r\n            questionRenderCompleted: false,\r\n            questionItem: JSON.parse(JSON.stringify(props.value)),\r\n            // initVal: initVal,\r\n            questionStructure: props.questionStructure,\r\n            type: props.value.question.questionType,\r\n            // value: initVal,\r\n            activeKey: '0',\r\n            answer: ['A'],\r\n            errList: [],\r\n            isChangeQuestionList: props.value.question.isChangeQuestionList || [],\r\n            hasError: false,\r\n            orderSortVisible: false,\r\n            modalPosition: {\r\n                visible: false,\r\n                ActiveKey: '0',\r\n                left: 'calc(50% - 200px)',\r\n                top: 'calc(50vh - 207px)',\r\n            },\r\n            modalPositionInsertFormula: {\r\n                visible: false,\r\n                ActiveKey: '0',\r\n                left: 'calc(50% - 500px)',\r\n                top: 'calc(50vh - 200px)',\r\n            },\r\n            color: 'black',\r\n            sortFormat: '1',\r\n            isInBox: false, // 是否聚焦在输入框内\r\n            videoUrl\r\n        };\r\n\r\n        this.changeValue = debounce(this.changeValue, 100);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        showMathJax();\r\n\r\n        document.getElementById('RichText')?.addEventListener('dragstart', (e) => {\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            return false;\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    componentWillReceiveProps(nextProps: any) {\r\n\r\n        let questionStructure = nextProps.questionStructure;\r\n\r\n        if (JSON.stringify(this.state.questionStructure) !== JSON.stringify(questionStructure)) {\r\n\r\n\r\n            // console.log('questionStructure====>', questionStructure);\r\n\r\n            // let transitionQuestionStructure = _.map(_.cloneDeep(questionStructure), (el: any) => {\r\n\r\n            //     el.content = [];\r\n            //     return el;\r\n            // });\r\n\r\n            this.setState({\r\n                questionStructure: [],\r\n            }, () => {\r\n\r\n                this.setState({\r\n\r\n                    questionStructure: questionStructure,\r\n                    type: nextProps.value.question.questionType,\r\n                }, () => {\r\n                    showMathJax(true);\r\n                });\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch() {\r\n\r\n        const { hasError } = this.state;\r\n        Tips.open({\r\n            message: `输入错误，请重新输入！`,\r\n            type: 'fail',\r\n            time: 500\r\n        });\r\n        this.setState({ hasError: !hasError });\r\n        showMathJax(true);\r\n\r\n    }\r\n\r\n    // 父组件触犯\r\n    changChild = () => {\r\n\r\n        console.error('222');\r\n    }\r\n\r\n\r\n    changeValue = (value: any, indexArr: any, ei: any, questionType?: string) => {\r\n        // @ts-ignore\r\n        this.props.changeValue && this.props.changeValue(value, indexArr, ei, questionType);\r\n\r\n    }\r\n\r\n    handleBatchOk = (n: any) => {\r\n\r\n        const { questionItem, questionStructure, isChangeQuestionList, type, videoUrl } = this.state;\r\n\r\n        let changeValue = getQuestionHtml(JSON.parse(JSON.stringify(questionStructure)), type);\r\n\r\n        if (changeValue.questionList['questions']) {\r\n\r\n            changeValue.questionList['questions'] = changeValue.questionList['questions'].map((item: any, index: any) => {\r\n                return {\r\n                    ...questionItem['question']['questions'][index],\r\n                    ...item,\r\n                };\r\n            });\r\n        }\r\n\r\n        let newQuestionItem = {\r\n            ...questionItem,\r\n\r\n            question: {\r\n                ...questionItem['question'],\r\n                ...changeValue.questionList,\r\n                isChangeQuestionList: n === 1 ? isChangeQuestionList : [],\r\n            }\r\n        };\r\n\r\n        if (changeValue.errList.length > 0 && n !== 0) {\r\n            Tips.open({\r\n                message: `请完善内容`,\r\n                type: 'fail',\r\n            });\r\n\r\n            let errKey = changeValue.errList.map((item: any) => {\r\n                return item.index;\r\n            });\r\n\r\n            errKey = errKey.filter((e: any) => e !== undefined);\r\n\r\n            this.setState({\r\n                questionStructure: changeValue.question,\r\n                errList: errKey,\r\n                activeKey: `${errKey && errKey.length > 0 ? errKey[0] : this.state.activeKey}`\r\n            });\r\n\r\n        } else {\r\n\r\n            if (videoUrl.content) {\r\n                newQuestionItem.question.stem.push({\r\n                    alignment: \"Left\",\r\n                    fragments: [\r\n                        {\r\n                            content: videoUrl.content,\r\n                            mediaType: \"AUDIO\",\r\n                            styles: [],\r\n                        }\r\n                    ],\r\n                    indentation: 0,\r\n                    styles: []\r\n                })\r\n            };\r\n            if (videoUrl.questions && Object.keys(videoUrl.questions).length > 0) {\r\n                for (const key in videoUrl.questions) {\r\n                    if (videoUrl.questions.hasOwnProperty(key)) {\r\n                        const element = videoUrl.questions[key].content;\r\n                        if (element) {\r\n                            newQuestionItem.question.questions[key].stem.push({\r\n                                alignment: \"Left\",\r\n                                fragments: [\r\n                                    {\r\n                                        content: element,\r\n                                        mediaType: \"AUDIO\",\r\n                                        styles: [],\r\n                                    }\r\n                                ],\r\n                                indentation: 0,\r\n                                styles: []\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            this.props.handOkVal && this.props.handOkVal(newQuestionItem, n);\r\n        }\r\n\r\n    }\r\n\r\n    chooseBox = (index: any) => {\r\n\r\n        const { questionStructure } = this.state;\r\n\r\n        let newQuestionStructure = questionStructure.map((item: any, i: number) => {\r\n            if (index !== i) {\r\n                item.isChoose = false;\r\n            } else {\r\n                item.isChoose = true;\r\n            }\r\n            item.readOnly = false;\r\n            return item;\r\n        });\r\n\r\n        this.setState({\r\n            questionStructure: newQuestionStructure\r\n        });\r\n\r\n    }\r\n\r\n\r\n    setAnswer = (e: any, ei: any) => {\r\n\r\n        const { questionStructure } = this.state;\r\n        let newQuestionStructure = JSON.parse(JSON.stringify(questionStructure)).map((questionItem: any) => {\r\n            if (questionItem.type === 'answer') {\r\n                questionItem.content = e;\r\n                questionItem.isFilled = true;\r\n            }\r\n\r\n            if (questionItem.type === 'comprehensive') {\r\n                questionItem.content[ei].map((item: any) => {\r\n                    if (item.type === 'answer') {\r\n                        item.content = e;\r\n                        item.isFilled = true;\r\n                    }\r\n                });\r\n            }\r\n            return questionItem;\r\n        });\r\n\r\n        console.log('newQuestionStructure==>', newQuestionStructure);\r\n\r\n        this.setState({\r\n            questionStructure: newQuestionStructure,\r\n\r\n        }, () => {\r\n\r\n            this.props.changeAnswer(newQuestionStructure);\r\n        });\r\n\r\n    }\r\n\r\n    // 删除选择题选项\r\n    deleteOption = (index: any, ei: any) => {\r\n        const { questionStructure, isChangeQuestionList } = this.state;\r\n        let newQuestionStructures: any;\r\n        let isOnlyOption = false;\r\n\r\n        newQuestionStructures = getEmptyOption(index, questionStructure, isOnlyOption, ei);\r\n\r\n        if (ei !== undefined) {\r\n            if (isChangeQuestionList.indexOf(ei) === -1) {\r\n                isChangeQuestionList.push(ei);\r\n            }\r\n        } else {\r\n            if (isChangeQuestionList.indexOf(-1) === -1) {\r\n                isChangeQuestionList.push(-1);\r\n            }\r\n        }\r\n\r\n\r\n        if (newQuestionStructures.isOnlyOption) {\r\n\r\n            Tips.open({\r\n                message: `至少包含两个选项`,\r\n                type: 'fail',\r\n            });\r\n\r\n        } else {\r\n            this.setState({\r\n                questionStructure: newQuestionStructures.newQuestionStructure\r\n            }, () => {\r\n                this.setState({\r\n                    questionStructure: newQuestionStructures.newQuestionStructure1,\r\n                    isChangeQuestionList\r\n                }, () => {\r\n\r\n                    showMathJax(true);\r\n\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    callback = (key: any) => {\r\n\r\n        const { questionItem, questionStructure, type } = this.state;\r\n\r\n        let changeValue = getQuestionHtml(JSON.parse(JSON.stringify(questionStructure)), type);\r\n\r\n        let errKey = changeValue.errList.map((item: any) => {\r\n            return item.index;\r\n        });\r\n\r\n        errKey = errKey.filter((e: any) => e !== undefined);\r\n\r\n        this.setState({\r\n            activeKey: key,\r\n            errList: errKey\r\n        }, () => {\r\n            showMathJax(true);\r\n        });\r\n    }\r\n\r\n    // 保存拖拽的位置\r\n    postion = (e: any) => {\r\n\r\n        this.setState({\r\n            modalPosition: e\r\n        });\r\n\r\n    }\r\n\r\n    positionInsertFormula = (e: any) => {\r\n        this.setState({\r\n            modalPositionInsertFormula: e\r\n        });\r\n\r\n    }\r\n\r\n    // 切换答案的类型\r\n    changeItem = (option: any) => {\r\n\r\n        const { questionStructure } = this.state;\r\n\r\n        let newQuestionStructure = _.map(questionStructure, (item: any) => {\r\n            if (item.type === 'answer') {\r\n                item.option = _.cloneDeep(option);\r\n                item.content = [{\r\n                    children: [{\r\n                        text: option[0],\r\n                        styles: [],\r\n                        type: 'Left'\r\n                    }]\r\n                }]\r\n            }\r\n            return item;\r\n        })\r\n\r\n        this.setState({\r\n            questionStructure: newQuestionStructure\r\n        }, () => {\r\n\r\n            this.props.changeAnswer(newQuestionStructure);\r\n        });\r\n\r\n        // console.log('questionStructure==>', questionStructure);\r\n\r\n    }\r\n\r\n    // 取消答案\r\n    // @ts-ignore\r\n    calcelAnswers = (index: any, i: any) => {\r\n        const { questionStructure, type } = this.state;\r\n\r\n        let newQuestionStructure = _.map(questionStructure, (item: any) => {\r\n            if (item.type === 'option') {\r\n                item.content = _.map(item.content, (el: any, eli: number) => {\r\n\r\n                    if (eli === i) {\r\n                        el = {\r\n                            ...el,\r\n                            isAnswer: false\r\n                        }\r\n                    }\r\n\r\n                    return el;\r\n                })\r\n            }\r\n\r\n            return item;\r\n        })\r\n\r\n        newQuestionStructure = this.getAnswerStructure(newQuestionStructure);\r\n\r\n        this.setState({\r\n            questionStructure: newQuestionStructure,\r\n        }, () => {\r\n            this.props.changeAnswer(newQuestionStructure);\r\n        });\r\n    }\r\n\r\n    // 设置答案\r\n    // @ts-ignore\r\n    setAnswers = (index: any, i: any) => {\r\n\r\n        const { questionStructure, type } = this.state;\r\n\r\n        console.log('newQuestionStructure==>', questionStructure);\r\n        let newQuestionStructure = _.map(questionStructure, (item: any) => {\r\n            // 修改报错的状态\r\n            item.isFilled = true;\r\n            if (item.type === 'option') {\r\n\r\n                if (type === 'SINGLE_CHOICE') {\r\n                    item.content = _.map(item.content, (el: any, eli: number) => {\r\n\r\n                        if (eli === i) {\r\n                            el = {\r\n                                ...el,\r\n                                isAnswer: true\r\n                            }\r\n                        } else {\r\n                            el = {\r\n                                ...el,\r\n                                isAnswer: false\r\n                            }\r\n                        }\r\n                        return el;\r\n                    })\r\n                } else {\r\n                    item.content = _.map(item.content, (el: any, eli: number) => {\r\n                        if (eli === i) {\r\n                            el = {\r\n                                ...el,\r\n                                isAnswer: true\r\n                            }\r\n                        }\r\n                        return el;\r\n                    })\r\n                }\r\n            }\r\n\r\n            return item;\r\n        })\r\n        newQuestionStructure = this.getAnswerStructure(questionStructure);\r\n\r\n        this.setState({\r\n            questionStructure: newQuestionStructure,\r\n        }, () => {\r\n            this.props.changeAnswer(newQuestionStructure);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    getAnswerStructure = (newQuestionStructure: any) => {\r\n        let contentItem: any = [];\r\n\r\n        newQuestionStructure = _.map(newQuestionStructure, (item: any) => {\r\n            if (item.type === 'option') {\r\n                item.content = _.map(item.content, (el: any, eli: number) => {\r\n                    if (el.isAnswer) {\r\n                        contentItem.push(\r\n                            {\r\n                                children: [{\r\n                                    text: optionValue[eli]\r\n                                }],\r\n                                styles: [],\r\n                                type: 'Left'\r\n                            }\r\n                        );\r\n                    }\r\n                    return el;\r\n                })\r\n            }\r\n            return item;\r\n        });\r\n\r\n        newQuestionStructure = _.map(newQuestionStructure, (item: any) => {\r\n            if (item.type === 'answer') {\r\n                item.content = _.cloneDeep(contentItem);\r\n            }\r\n            return item;\r\n        })\r\n\r\n        return newQuestionStructure;\r\n    }\r\n\r\n    addAnswers = (index: any, i: any) => {\r\n        const { questionStructure } = this.state;\r\n\r\n        let newQuestionStructure = _.cloneDeep(questionStructure);\r\n\r\n        // console.log('questionStructure====>', _.cloneDeep(questionStructure));\r\n\r\n        let contents = newQuestionStructure[index]['content'];\r\n        newQuestionStructure[index]['content'] = _.map(contents, (item: any) => {\r\n            item = {\r\n                ...item,\r\n                autoFocus: false\r\n            }\r\n            return item;\r\n        })\r\n\r\n        newQuestionStructure[index]['content'].splice(i + 1, 0, {\r\n            children: [{ text: \"\", isAdd: true }],\r\n            isFilled: true,\r\n            autoFocus: true,\r\n            key: String(Math.random()).replace('\\.', ''),\r\n            requireText: \"内容不能为空\",\r\n            styles: [],\r\n            type: 'Left'\r\n        });\r\n\r\n        this.props.changeAnswer(_.cloneDeep(newQuestionStructure));\r\n\r\n    }\r\n\r\n    deleteAnswers = (index: any, i: any) => {\r\n\r\n        let { questionStructure } = this.state;\r\n\r\n        questionStructure[index]['content'].splice(i, 1);\r\n        let content = questionStructure[index]['content'].length;\r\n\r\n        // @ts-ignore\r\n        let option = optionValue.filter((el: any, index: number) => index < content);\r\n\r\n\r\n        // 删除的时候，对答案进行处理\r\n        questionStructure = _.map(questionStructure, (el: any) => {\r\n\r\n            if (el.type === 'answer') {\r\n\r\n                // console.log(value);\r\n                // 记录修改的题\r\n                // 判断是否为空的\r\n                el.content = el.content.map((item: any) => {\r\n                    item.children = item.children.filter((e: any) => {\r\n                        let text = '';\r\n                        let result = e.text ? e.text.replace(/(^\\s*)|(\\s*$)/g, '') : '';\r\n                        if (e.character) {\r\n                            result += e.character ? e.character.replace(/(^\\s*)|(\\s*$)/g, '') : '';\r\n                        }\r\n                        text += result;\r\n\r\n                        return option.includes(text);\r\n\r\n                    });\r\n                    item.option = _.cloneDeep(option);\r\n                    return item;\r\n                });\r\n            }\r\n            return el;\r\n        });\r\n\r\n        let newQuestionStructure = this.getAnswerStructure(questionStructure);\r\n\r\n        this.setState({\r\n            questionStructure: newQuestionStructure,\r\n        }, () => {\r\n\r\n            this.props.changeAnswer(_.cloneDeep(newQuestionStructure));\r\n        });\r\n\r\n    }\r\n\r\n\r\n    RichTextRender(item: any, index: any, ei: any) {\r\n\r\n        const { modalPosition, color, sortFormat, modalPositionInsertFormula, isInBox } = this.state;\r\n        const { search } = this.props;\r\n\r\n        let renderDom;\r\n\r\n        if (item.type !== 'option' && item.type !== 'answer') {\r\n            renderDom = <div>\r\n                <div className={!item.isFilled && item.require ? 'boxError' : 'RichTextInput'}>\r\n                    <RichText\r\n                        search={search}\r\n                        value={item.content}\r\n                        isFistRich={item.isFistRich}\r\n                        minHeight={63}\r\n                        id={`${index}${ei}`}\r\n                        changeValue={(e: any) => this.changeValue(e, [index], ei)}\r\n                        postion={(e: any) => this.postion(e)}\r\n                        positionInsertFormula={(e: any) => this.positionInsertFormula(e)}\r\n                        modalPosition={modalPosition}\r\n                        modalPositionInsertFormula={modalPositionInsertFormula}\r\n                        changeColor={(color: any) => this.setState({ color })}\r\n                        color={color}\r\n                        sortFormat={sortFormat}\r\n                        setFormat={(e: any) => this.setState({ sortFormat: e })}\r\n                        isInBox={isInBox}\r\n                    >\r\n                    </RichText>\r\n\r\n                </div>\r\n                {!item.isFilled && item.require ? <div className={'error'}>{item.requireText}</div> : ''}\r\n\r\n            </div>;\r\n        } else if (item.type !== 'answer') {\r\n\r\n            renderDom = <div className=\"optionContain\">\r\n                {\r\n                    item.content.map((contentItem: any, i: any) => {\r\n                        return <div\r\n                            key={contentItem.key || i}\r\n                            className={'optionBox1'}>\r\n                            <div\r\n                                className={'optionItem'}\r\n                            >\r\n                                {/* <div className={'item'}>\r\n                                    {optionValue[i]}\r\n                                </div> */}\r\n                                <div className={`${'richtext'}\r\n                                        optionContent\r\n                                        ${!contentItem.isFilled ? 'boxError' : 'RichTextInput'}\r\n                                        ${contentItem.isAnswer ? 'isAnswer' : ''}\r\n                                    `}\r\n                                    id={contentItem['autoFocus'] ? 'autoFocus' : ''}\r\n                                >\r\n                                    <div className=\"answerOptate\">\r\n                                        {\r\n                                            item.content.length > 2 ? <div className=\"cancelswer\" onClick={() => this.deleteAnswers(index, i)}>删除</div> : ''\r\n                                        }\r\n                                        {\r\n                                            !contentItem.isAnswer ?\r\n                                                <div className=\"answer\" onClick={() => this.setAnswers(index, i)}>设为答案</div>\r\n                                                : <div className=\"answer\" onClick={() => this.calcelAnswers(index, i)}>取消答案</div>\r\n                                        }\r\n                                        <div className=\"addswer\" onMouseUp={() => this.addAnswers(index, i)}>新增</div>\r\n                                    </div>\r\n                                    <RichText\r\n                                        search={search}\r\n                                        index={contentItem['Key']}\r\n                                        value={[contentItem]}\r\n                                        autoFocus={contentItem['autoFocus']}\r\n                                        isoption={true}\r\n                                        isOption={true}\r\n                                        id={`${index}${i}`}\r\n                                        isFilled={contentItem.isFilled}\r\n                                        changeValue={(e: any) => this.changeValue(e, [index, i], ei)}\r\n                                        postion={(e: any) => this.postion(e)}\r\n                                        positionInsertFormula={(e: any) => this.positionInsertFormula(e)}\r\n                                        modalPosition={modalPosition}\r\n                                        modalPositionInsertFormula={modalPositionInsertFormula}\r\n                                        changeColor={(color: any) => this.setState({ color })}\r\n                                        color={color}\r\n                                        sortFormat={sortFormat}\r\n                                        setFormat={(e: any) => this.setState({ sortFormat: e })}\r\n                                        isInBox={isInBox}\r\n                                    >\r\n                                    </RichText>\r\n                                </div>\r\n                            </div>\r\n                            {!contentItem.isFilled ? <div className={'error'}>{contentItem.requireText}</div> : ''}\r\n                        </div>;\r\n                    })\r\n                }\r\n            </div>\r\n        } else if (item.type === 'answer'\r\n            && (\r\n                item.questionType !== 'SINGLE_CHOICE' &&\r\n                item.questionType !== 'MULTIPLE_CHOICE' &&\r\n                item.questionType !== 'INDEFINITE_CHOICE'\r\n            )\r\n        ) {\r\n\r\n            renderDom = item.isChoice ? <div>\r\n                <ChoiceAnswer\r\n                    answer={item.content}\r\n                    option={item.option}\r\n                    questionType={item.questionType}\r\n                    setAnswer={(e: any) => this.setAnswer(e, ei)}\r\n                ></ChoiceAnswer>\r\n                {\r\n                    !item.isFilled && item.require ? <div className={'error'}>{item.requireText}</div> : ''\r\n                }\r\n            </div> : <div>\r\n                    <div className={!item.isFilled && item.require ? 'boxError' : 'RichTextInput'}>\r\n\r\n                        <RichText\r\n                            search={search}\r\n                            value={item.content}\r\n                            isFistRich={item.isFistRich}\r\n                            minHeight={63}\r\n                            id={`${index}${ei}`}\r\n                            changeValue={(e: any) => this.changeValue(e, [index], ei, 'answer')}\r\n                            postion={(e: any) => this.postion(e)}\r\n                            positionInsertFormula={(e: any) => this.positionInsertFormula(e)}\r\n                            modalPosition={modalPosition}\r\n                            modalPositionInsertFormula={modalPositionInsertFormula}\r\n                            changeColor={(color: any) => this.setState({ color })}\r\n                            color={color}\r\n                            sortFormat={sortFormat}\r\n                            setFormat={(e: any) => this.setState({ sortFormat: e })}\r\n                            isInBox={isInBox}\r\n                        >\r\n                        </RichText>\r\n\r\n                    </div>\r\n                    {!item.isFilled && item.require ? <div className={'error'}>{item.requireText}</div> : ''}\r\n                </div>;\r\n        } else if (item.type === 'answer') {\r\n\r\n            renderDom = item.isChoice ? <div>\r\n\r\n                {\r\n                    !item.isFilled && item.require ? <div className={'error'}>{item.requireText}</div> : ''\r\n                }\r\n            </div> : '';\r\n        }\r\n\r\n\r\n        return renderDom;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { questionStructure, errList, activeKey, hasError, videoUrl } = this.state;\r\n        const { copyQuestionMode, renderDOM } = this.props;\r\n\r\n        let topicContent = (item: any, index: any, ei?: any) => <div key={index}>\r\n            {\r\n                item.type === 'answer' && (\r\n                    item.questionType === 'SINGLE_CHOICE' ||\r\n                    item.questionType === 'MULTIPLE_CHOICE' ||\r\n                    item.questionType === 'INDEFINITE_CHOICE'\r\n                ) ? '' : <div className={`${'title'}`}>\r\n                        {item.require ? <span className={'require'}>*</span> : ''}\r\n\r\n                        <span>{item.title}</span>\r\n                        {\r\n                            item.type === 'stem' && copyQuestionMode ?\r\n                                <span\r\n                                    className='copyQuestion'\r\n                                    onClick={() => this.props.cancelCopy}\r\n                                >\r\n                                    取消{copyQuestionMode === 1 ? '复制' : '引用'}\r\n                                </span>\r\n                                : ''\r\n                        }\r\n                        {item.type === 'option' ? <span className={'choiceTips'}>{questionTypeText[item['questionType']]}</span> : ''}\r\n                        {item.questionType === 'JUDGEMENT' && item.type === 'answer' ?\r\n                            <JudgementAnswer\r\n                                option={item.option}\r\n                                changeItem={(item: any) => this.changeItem(item)}\r\n                            ></JudgementAnswer> : ''}\r\n                    </div>\r\n            }\r\n\r\n            {this.RichTextRender(item, index, ei)}\r\n            {\r\n                item.type === 'stem' ?\r\n                    <div className=\"addQuestionItem\">\r\n\r\n                        <span className={'questionType'}>\r\n                            {renderDOM && renderDOM}\r\n                        </span>\r\n\r\n                    </div>\r\n                    : ''\r\n            }\r\n            {/* </Spin> */}\r\n        </div>;\r\n\r\n        let RichText = (isError: any) => <div id=\"RichText\" className={`${isError}`}>\r\n            {\r\n                questionStructure.map((item: any, index: any) => {\r\n                    let result = <div key={index}></div>;\r\n                    if (item.type !== 'comprehensive') {\r\n                        result = topicContent(item, index);\r\n                    }\r\n                    return result;\r\n                })\r\n            }\r\n\r\n            <div\r\n                id=\"showImgBox\"\r\n            ></div>\r\n        </div>;\r\n\r\n        return (<div>\r\n            {\r\n                hasError ? RichText(true) : RichText(false)\r\n            }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n"]}]}
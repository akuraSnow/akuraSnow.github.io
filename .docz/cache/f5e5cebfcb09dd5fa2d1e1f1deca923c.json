{"remainingRequest":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js!F:\\slate\\easteduCompoents\\src\\QuestionEditor\\utils\\encodeAndDecodeUrl.ts","dependencies":[{"path":"F:\\slate\\easteduCompoents\\src\\QuestionEditor\\utils\\encodeAndDecodeUrl.ts","mtime":1611305100479},{"path":"F:\\slate\\easteduCompoents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611297672593},{"path":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1611297676370},{"path":"F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1611297672218},{"path":"F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js","mtime":1599723087186}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCi8vIOaKiuWcsOWdgOi9rOaNouS4umJhc2U2NFVybApleHBvcnQgZnVuY3Rpb24gZW5jb2RlSnNvblRvQmFzZTY0VVJMKGpzb25TdHJpbmcpIHsKICBpZiAoIWpzb25TdHJpbmcpIHJldHVybiAnJzsKICB2YXIgYmFzZTY0VVJMID0gJyc7CgogIHRyeSB7CiAgICAvLyDovazkuLroi7HmloflrZfnrKYg5rGJ5a2X5Lya5oql6ZSZCiAgICB2YXIgdGVtcHN0ciA9IHdpbmRvdy5lbmNvZGVVUklDb21wb25lbnQoanNvblN0cmluZyk7IC8vIOi9rOaNouS4umJhc2U2NOWtl+espuS4sgoKICAgIHZhciBiYXNlNjRTdHIgPSB3aW5kb3cuYnRvYSh0ZW1wc3RyKTsgLy8g5pu/5o2iYmFzZTY05LitIC8gLS0+IF8gID0gLS0+ICcnICsgLS0+IC0KCiAgICBiYXNlNjRVUkwgPSBiYXNlNjRTdHIucmVwbGFjZSgvPS9nLCAnJykucmVwbGFjZSgvXC8vZywgJ18nKS5yZXBsYWNlKC9cKy9nLCAnLScpOwogIH0gY2F0Y2ggKGUpIHsKICAgIGNvbnNvbGUuZXJyb3IoZSk7CiAgfQoKICByZXR1cm4gYmFzZTY0VVJMOwp9IC8vIOino+eggWJhc2U2NFVSTAoKaWYgKHR5cGVvZiBlbmNvZGVKc29uVG9CYXNlNjRVUkwgIT09ICd1bmRlZmluZWQnICYmIGVuY29kZUpzb25Ub0Jhc2U2NFVSTCAmJiBlbmNvZGVKc29uVG9CYXNlNjRVUkwgPT09IE9iamVjdChlbmNvZGVKc29uVG9CYXNlNjRVUkwpICYmIE9iamVjdC5pc0V4dGVuc2libGUoZW5jb2RlSnNvblRvQmFzZTY0VVJMKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbmNvZGVKc29uVG9CYXNlNjRVUkwsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJlbmNvZGVKc29uVG9CYXNlNjRVUkwiLAogICAgICBmaWxlbmFtZTogInNyY1xcUXVlc3Rpb25FZGl0b3JcXHV0aWxzXFxlbmNvZGVBbmREZWNvZGVVcmwudHMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCYXNlNjRVUkwoYmFzZTY0U3RyKSB7CiAgaWYgKCFiYXNlNjRTdHIpIHJldHVybiAnJzsKICB2YXIgcmVzdWx0ID0gJyc7CgogIHRyeSB7CiAgICAvLyDku45iYXNlNjRVUkwg6Kej5p6Q5Li6YmFzZTY0CiAgICB2YXIgbW9kZSA9IGJhc2U2NFN0ci5sZW5ndGggJSA0OwoKICAgIGlmIChtb2RlID4gMCkgewogICAgICBiYXNlNjRTdHIgKz0gbmV3IEFycmF5KDUgLSBtb2RlKS5qb2luKCc9Jyk7CiAgICB9CgogICAgdmFyIHRlbXBTdHIgPSBiYXNlNjRTdHIucmVwbGFjZSgvXC0vZywgJysnKS5yZXBsYWNlKC9cXy9nLCAnLycpOwogICAgdmFyIGJhc2U2NCA9IHdpbmRvdy5hdG9iKHRlbXBTdHIpOwogICAgdmFyIHVybCA9IHdpbmRvdy5kZWNvZGVVUklDb21wb25lbnQoYmFzZTY0KTsKICAgIHJlc3VsdCA9IHVybDsKICB9IGNhdGNoIChlKSB7CiAgICBjb25zb2xlLmVycm9yKGUpOwogIH0KCiAgcmV0dXJuIHJlc3VsdDsKfQoKaWYgKHR5cGVvZiBkZWNvZGVCYXNlNjRVUkwgIT09ICd1bmRlZmluZWQnICYmIGRlY29kZUJhc2U2NFVSTCAmJiBkZWNvZGVCYXNlNjRVUkwgPT09IE9iamVjdChkZWNvZGVCYXNlNjRVUkwpICYmIE9iamVjdC5pc0V4dGVuc2libGUoZGVjb2RlQmFzZTY0VVJMKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkZWNvZGVCYXNlNjRVUkwsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJkZWNvZGVCYXNlNjRVUkwiLAogICAgICBmaWxlbmFtZTogInNyY1xcUXVlc3Rpb25FZGl0b3JcXHV0aWxzXFxlbmNvZGVBbmREZWNvZGVVcmwudHMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBvcmlnaW5JbmZvQWZ0ZXJEZWNvZGVCYXNlNjRVUkwoYmFzZTY0U3RyKSB7CiAgdmFyIHJlc3VsdCA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIHZhciB0ZW1wID0gZGVjb2RlQmFzZTY0VVJMKGJhc2U2NFN0cik7CiAgICByZXN1bHQgPSBKU09OLnBhcnNlKHRlbXApOwogIH0gY2F0Y2ggKGUpIHsKICAgIGNvbnNvbGUuZXJyb3IoZSk7CiAgfQoKICByZXR1cm4gcmVzdWx0Owp9IC8vIC8vIOino+eggWJhc2U2NFVSTAovLyBleHBvcnQgZnVuY3Rpb24gZGVjb2RlQmFzZTY0VVJMVG9RdWVyeVN0cmluZyhiYXNlNjRTdHI6IHN0cmluZyk6IHN0cmluZyB7Ci8vICAgICBpZiAoIWJhc2U2NFN0cikgcmV0dXJuICcnOwovLyAgICAgbGV0IHJlc3VsdCA9ICcnOwovLyAgICAgdHJ5IHsKLy8gICAgICAgICAvLyDku45iYXNlNjRVUkwg6Kej5p6Q5Li6YmFzZTY0Ci8vICAgICAgICAgY29uc3QgbW9kZSA9IGJhc2U2NFN0ci5sZW5ndGggJSA0OwovLyAgICAgICAgIGlmIChtb2RlID4gMCkgewovLyAgICAgICAgICAgICBiYXNlNjRTdHIgKz0gbmV3IEFycmF5KDUgLSBtb2RlKS5qb2luKCc9Jyk7Ci8vICAgICAgICAgfQovLyAgICAgICAgIGNvbnN0IHRlbXBTdHIgPSBiYXNlNjRTdHIucmVwbGFjZSgvXC0vZywgJysnKS5yZXBsYWNlKC9cXy9nLCAnLycpOwovLyAgICAgICAgIGNvbnN0IGJhc2U2NCA9IHdpbmRvdy5hdG9iKHRlbXBTdHIpOwovLyAgICAgICAgIGNvbnN0IGpzb25TdHIgPSAod2luZG93IGFzIGFueSkuZGVjb2RlVVJJQ29tcG9uZW50KGJhc2U2NCk7Ci8vICAgICAgICAgLy8g6Kej5p6Q5Yiw5a+56LGhCi8vICAgICAgICAgY29uc3Qgb2JqID0gSlNPTi5wYXJzZShqc29uU3RyKTsKLy8gICAgICAgICBsZXQgZmlyc3RLZXkgPSB0cnVlOwovLyAgICAgICAgIGZvciAobGV0IGtleSBpbiBvYmopIHsgLy8g6ZyA6KaBVVJJZW5jb2RlCi8vICAgICAgICAgICAgIGlmIChmaXJzdEtleSkgewovLyAgICAgICAgICAgICAgICAgcmVzdWx0ICs9IGAke2tleX09JHtlbmNvZGVVUklDb21wb25lbnQob2JqW2tleV0pfWA7Ci8vICAgICAgICAgICAgICAgICBmaXJzdEtleSA9IGZhbHNlOwovLyAgICAgICAgICAgICB9IGVsc2UgewovLyAgICAgICAgICAgICAgICAgcmVzdWx0ICs9IGAmJHtrZXl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KG9ialtrZXldKX1gOwovLyAgICAgICAgICAgICB9Ci8vICAgICAgICAgfQovLyAgICAgfSBjYXRjaCAoZSkgewovLyAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7Ci8vICAgICB9Ci8vICAgICByZXR1cm4gcmVzdWx0OwovLyB9CgppZiAodHlwZW9mIG9yaWdpbkluZm9BZnRlckRlY29kZUJhc2U2NFVSTCAhPT0gJ3VuZGVmaW5lZCcgJiYgb3JpZ2luSW5mb0FmdGVyRGVjb2RlQmFzZTY0VVJMICYmIG9yaWdpbkluZm9BZnRlckRlY29kZUJhc2U2NFVSTCA9PT0gT2JqZWN0KG9yaWdpbkluZm9BZnRlckRlY29kZUJhc2U2NFVSTCkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShvcmlnaW5JbmZvQWZ0ZXJEZWNvZGVCYXNlNjRVUkwpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9yaWdpbkluZm9BZnRlckRlY29kZUJhc2U2NFVSTCwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIm9yaWdpbkluZm9BZnRlckRlY29kZUJhc2U2NFVSTCIsCiAgICAgIGZpbGVuYW1lOiAic3JjXFxRdWVzdGlvbkVkaXRvclxcdXRpbHNcXGVuY29kZUFuZERlY29kZVVybC50cyIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdCA6IHVuZGVmaW5lZDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoZW5jb2RlSnNvblRvQmFzZTY0VVJMLCAiZW5jb2RlSnNvblRvQmFzZTY0VVJMIiwgIkY6XFxzbGF0ZVxcZWFzdGVkdUNvbXBvZW50c1xcc3JjXFxRdWVzdGlvbkVkaXRvclxcdXRpbHNcXGVuY29kZUFuZERlY29kZVVybC50cyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGRlY29kZUJhc2U2NFVSTCwgImRlY29kZUJhc2U2NFVSTCIsICJGOlxcc2xhdGVcXGVhc3RlZHVDb21wb2VudHNcXHNyY1xcUXVlc3Rpb25FZGl0b3JcXHV0aWxzXFxlbmNvZGVBbmREZWNvZGVVcmwudHMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihvcmlnaW5JbmZvQWZ0ZXJEZWNvZGVCYXNlNjRVUkwsICJvcmlnaW5JbmZvQWZ0ZXJEZWNvZGVCYXNlNjRVUkwiLCAiRjpcXHNsYXRlXFxlYXN0ZWR1Q29tcG9lbnRzXFxzcmNcXFF1ZXN0aW9uRWRpdG9yXFx1dGlsc1xcZW5jb2RlQW5kRGVjb2RlVXJsLnRzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5sZWF2ZU1vZHVsZSA6IHVuZGVmaW5lZDsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["F:/slate/easteduCompoents/src/QuestionEditor/utils/encodeAndDecodeUrl.ts"],"names":["encodeJsonToBase64URL","jsonString","base64URL","tempstr","window","encodeURIComponent","base64Str","btoa","replace","e","console","error","decodeBase64URL","result","mode","length","Array","join","tempStr","base64","atob","url","decodeURIComponent","originInfoAfterDecodeBase64URL","undefined","temp","JSON","parse"],"mappings":";;;;;;;;;AAAA;AACA,OAAO,SAASA,qBAAT,CAA+BC,UAA/B,EAAmD;AACxD,MAAI,CAACA,UAAL,EAAiB,OAAO,EAAP;AACjB,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAI;AACF;AACA,QAAMC,OAAO,GAAGC,MAAM,CAACC,kBAAP,CAA0BJ,UAA1B,CAAhB,CAFE,CAGF;;AACA,QAAMK,SAAS,GAAGF,MAAM,CAACG,IAAP,CAAYJ,OAAZ,CAAlB,CAJE,CAKF;;AACAD,IAAAA,SAAS,GAAGI,SAAS,CAClBE,OADS,CACD,IADC,EACK,EADL,EAETA,OAFS,CAED,KAFC,EAEM,GAFN,EAGTA,OAHS,CAGD,KAHC,EAGM,GAHN,CAAZ;AAID,GAVD,CAUE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AAED,SAAOP,SAAP;AACD,C,CAED;;;;;;;;;;;;;AACA,OAAO,SAASU,eAAT,CAAyBN,SAAzB,EAAoD;AACzD,MAAI,CAACA,SAAL,EAAgB,OAAO,EAAP;AAChB,MAAIO,MAAM,GAAG,EAAb;;AACA,MAAI;AACF;AACA,QAAMC,IAAI,GAAGR,SAAS,CAACS,MAAV,GAAmB,CAAhC;;AACA,QAAID,IAAI,GAAG,CAAX,EAAc;AACZR,MAAAA,SAAS,IAAI,IAAIU,KAAJ,CAAU,IAAIF,IAAd,EAAoBG,IAApB,CAAyB,GAAzB,CAAb;AACD;;AACD,QAAMC,OAAO,GAAGZ,SAAS,CAACE,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,EAA8BA,OAA9B,CAAsC,KAAtC,EAA6C,GAA7C,CAAhB;AACA,QAAMW,MAAM,GAAGf,MAAM,CAACgB,IAAP,CAAYF,OAAZ,CAAf;AACA,QAAMG,GAAG,GAAIjB,MAAD,CAAgBkB,kBAAhB,CAAmCH,MAAnC,CAAZ;AACAN,IAAAA,MAAM,GAAGQ,GAAT;AACD,GAVD,CAUE,OAAOZ,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AACD,SAAOI,MAAP;AACD;;;;;;;;;;;;;AAED,OAAO,SAASU,8BAAT,CAAwCjB,SAAxC,EAAmE;AACxE,MAAIO,MAAM,GAAGW,SAAb;;AACA,MAAI;AACF,QAAMC,IAAI,GAAGb,eAAe,CAACN,SAAD,CAA5B;AACAO,IAAAA,MAAM,GAAGa,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAT;AACD,GAHD,CAGE,OAAOhB,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AACD,SAAOI,MAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;0BAhFgBb,qB;0BAqBAY,e;0BAmBAW,8B","sourcesContent":["// 把地址转换为base64Url\r\nexport function encodeJsonToBase64URL(jsonString: string) {\r\n  if (!jsonString) return '';\r\n  let base64URL = '';\r\n  try {\r\n    // 转为英文字符 汉字会报错\r\n    const tempstr = window.encodeURIComponent(jsonString);\r\n    // 转换为base64字符串\r\n    const base64Str = window.btoa(tempstr);\r\n    // 替换base64中 / --> _  = --> '' + --> -\r\n    base64URL = base64Str\r\n      .replace(/=/g, '')\r\n      .replace(/\\//g, '_')\r\n      .replace(/\\+/g, '-');\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n\r\n  return base64URL;\r\n}\r\n\r\n// 解码base64URL\r\nexport function decodeBase64URL(base64Str: string): string {\r\n  if (!base64Str) return '';\r\n  let result = '';\r\n  try {\r\n    // 从base64URL 解析为base64\r\n    const mode = base64Str.length % 4;\r\n    if (mode > 0) {\r\n      base64Str += new Array(5 - mode).join('=');\r\n    }\r\n    const tempStr = base64Str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n    const base64 = window.atob(tempStr);\r\n    const url = (window as any).decodeURIComponent(base64);\r\n    result = url;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function originInfoAfterDecodeBase64URL(base64Str: string): string {\r\n  let result = undefined;\r\n  try {\r\n    const temp = decodeBase64URL(base64Str);\r\n    result = JSON.parse(temp);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return result;\r\n}\r\n\r\n// // 解码base64URL\r\n// export function decodeBase64URLToQueryString(base64Str: string): string {\r\n//     if (!base64Str) return '';\r\n//     let result = '';\r\n//     try {\r\n//         // 从base64URL 解析为base64\r\n//         const mode = base64Str.length % 4;\r\n//         if (mode > 0) {\r\n//             base64Str += new Array(5 - mode).join('=');\r\n//         }\r\n//         const tempStr = base64Str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n//         const base64 = window.atob(tempStr);\r\n//         const jsonStr = (window as any).decodeURIComponent(base64);\r\n//         // 解析到对象\r\n//         const obj = JSON.parse(jsonStr);\r\n//         let firstKey = true;\r\n\r\n//         for (let key in obj) { // 需要URIencode\r\n//             if (firstKey) {\r\n//                 result += `${key}=${encodeURIComponent(obj[key])}`;\r\n//                 firstKey = false;\r\n//             } else {\r\n//                 result += `&${key}=${encodeURIComponent(obj[key])}`;\r\n//             }\r\n//         }\r\n//     } catch (e) {\r\n//         console.error(e);\r\n//     }\r\n//     return result;\r\n// }\r\n"]}]}
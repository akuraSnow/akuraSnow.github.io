{"remainingRequest":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js!F:\\slate\\easteduCompoents\\src\\QuestionEditor\\editor\\iconCompents\\InsertFormula.tsx","dependencies":[{"path":"F:\\slate\\easteduCompoents\\src\\QuestionEditor\\editor\\iconCompents\\InsertFormula.tsx","mtime":1611718150169},{"path":"F:\\slate\\easteduCompoents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611297672593},{"path":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1611297676370},{"path":"F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1611297672218},{"path":"F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js","mtime":1599723087186}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJhbnRkL2VzL3NwaW4vc3R5bGUiOwppbXBvcnQgX1NwaW4gZnJvbSAiYW50ZC9lcy9zcGluIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRjpcXHNsYXRlXFxlYXN0ZWR1Q29tcG9lbnRzXFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICJGOlxcc2xhdGVcXGVhc3RlZHVDb21wb2VudHNcXG5vZGVfbW9kdWxlc1xcYmFiZWwtcHJlc2V0LXJlYWN0LWFwcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvcmVnZW5lcmF0b3IiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRjpcXHNsYXRlXFxlYXN0ZWR1Q29tcG9lbnRzXFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiRjpcXHNsYXRlXFxlYXN0ZWR1Q29tcG9lbnRzXFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgImFudGQvZXMvdGFicy9zdHlsZSI7CmltcG9ydCBfVGFicyBmcm9tICJhbnRkL2VzL3RhYnMiOwoKdmFyIF90aGlzID0gdGhpcywKICAgIF9qc3hGaWxlTmFtZSA9ICJGOlxcc2xhdGVcXGVhc3RlZHVDb21wb2VudHNcXHNyY1xcUXVlc3Rpb25FZGl0b3JcXGVkaXRvclxcaWNvbkNvbXBlbnRzXFxJbnNlcnRGb3JtdWxhLnRzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5lbnRlck1vZHVsZSA6IHVuZGVmaW5lZDsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKLy8gQHRzLW5vY2hlY2sKaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vY29tcG9uZW50cyc7CmltcG9ydCB7IGluc2VydEZvcm11bGEgfSBmcm9tICcuLi90b29sYmFySWNvbic7CmltcG9ydCBEcmFnTW9kZWwgZnJvbSAnLi4vLi4vLi4vRHJhZ01vZGVsL2luZGV4JzsKaW1wb3J0IHsgVHJhbnNmb3JtcyB9IGZyb20gJ3NsYXRlJzsKaW1wb3J0ICcuL2ljb25Db21wZW50cy5sZXNzJzsKaW1wb3J0IHsgaWRlbnRpZnlGb3JtdWxhRnJvbUltYWdlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvRWRpdGRRdWVzdGlvbic7IC8vIGltcG9ydCB7IFRpcHMgfSBmcm9tICcuLi8uLi9pbmRleCc7CgppbXBvcnQgeyBUaXBzIH0gZnJvbSAnLi4vLi4vLi4vTWVzc2FnZVRpcHMvaW5kZXgnOwp2YXIgVGFiUGFuZSA9IF9UYWJzLlRhYlBhbmU7CnZhciBfdmlzaWJsZSA9IHRydWU7Cgp2YXIgSW5zZXJ0Rm9ybXVsYSA9IGZ1bmN0aW9uIEluc2VydEZvcm11bGEocHJvcHMpIHsKICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUoZmFsc2UpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgdmlzaWJsZSA9IF91c2VTdGF0ZTJbMF0sCiAgICAgIHNldFZpc2libGUgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9IHVzZVN0YXRlKHByb3BzLm1vZGFsUG9zaXRpb24pLAogICAgICBfdXNlU3RhdGU0ID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlMywgMiksCiAgICAgIG1vZGFsUG9zaXRpb24gPSBfdXNlU3RhdGU0WzBdLAogICAgICBzZXRNb2RhbFBvc2l0aW9uID0gX3VzZVN0YXRlNFsxXTsKCiAgdmFyIF91c2VTdGF0ZTUgPSB1c2VTdGF0ZShmYWxzZSksCiAgICAgIF91c2VTdGF0ZTYgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGU1LCAyKSwKICAgICAgcHJldmlld0ltYWdlID0gX3VzZVN0YXRlNlswXSwKICAgICAgc2V0UHJldmlld0ltYWdlID0gX3VzZVN0YXRlNlsxXTsKCiAgdmFyIF91c2VTdGF0ZTcgPSB1c2VTdGF0ZShudWxsKSwKICAgICAgX3VzZVN0YXRlOCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTcsIDIpLAogICAgICBpZGVudGlmeVJlc3VsdCA9IF91c2VTdGF0ZThbMF0sCiAgICAgIHNldElkZW50aWZ5UmVzdWx0ID0gX3VzZVN0YXRlOFsxXTsKCiAgdmFyIF91c2VTdGF0ZTkgPSB1c2VTdGF0ZShmYWxzZSksCiAgICAgIF91c2VTdGF0ZTEwID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlOSwgMiksCiAgICAgIGxvYWRpbmcgPSBfdXNlU3RhdGUxMFswXSwKICAgICAgc2V0TG9hZGluZyA9IF91c2VTdGF0ZTEwWzFdOwoKICB2YXIgX3VzZVN0YXRlMTEgPSB1c2VTdGF0ZShudWxsKSwKICAgICAgX3VzZVN0YXRlMTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUxMSwgMiksCiAgICAgIHNlbGVjdGlvbiA9IF91c2VTdGF0ZTEyWzBdLAogICAgICBzZXRTZWxlY3Rpb24gPSBfdXNlU3RhdGUxMlsxXTsKCiAgdmFyIF91c2VTdGF0ZTEzID0gdXNlU3RhdGUoZmFsc2UpLAogICAgICBfdXNlU3RhdGUxNCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTEzLCAyKSwKICAgICAgaXNQYXJzZUlucHV0ID0gX3VzZVN0YXRlMTRbMF0sCiAgICAgIHNldElzUGFyc2VJbnB1dCA9IF91c2VTdGF0ZTE0WzFdOwoKICB2YXIgcGFyc2VJbWdSZWYgPSB1c2VSZWYoKTsKCiAgZnVuY3Rpb24gZm9jdXNIYW5kbGVyKF9yZWYpIHsKICAgIHZhciB0YXJnZXQgPSBfcmVmLnRhcmdldDsKICAgIHZhciBjbGFzc05hbWUgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKCdjbGFzcycpOwoKICAgIGlmIChjbGFzc05hbWUgPT09ICdwYXJzZS1pbnB1dCcpIHsKICAgICAgc2V0SXNQYXJzZUlucHV0KHRydWUpOwogICAgICB0YXJnZXQuZm9jdXMoKTsKICAgIH0KICB9CgogIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZvY3VzSGFuZGxlcik7CiAgICByZXR1cm4gZnVuY3Rpb24gY2xlYW51cCgpIHsKICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmb2N1c0hhbmRsZXIpOwogICAgfTsKICB9LCBbXSk7CiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHsKICAgIC8vIGNvbnNvbGUubG9nKCdwcm9wcy5tb2RhbFBvc2l0aW9uPT0+JywgcHJvcHMubW9kYWxQb3NpdGlvbik7CiAgICBzZXRNb2RhbFBvc2l0aW9uKHByb3BzLm1vZGFsUG9zaXRpb24pOyAvLyBzZXRWaXNpYmxlKHByb3BzLm1vZGFsUG9zaXRpb24udmlzaWJsZSk7CiAgfSwgW3Byb3BzLm1vZGFsUG9zaXRpb25dKTsKICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkgewogICAgaWYgKHByb3BzLmVkaXRvci5zZWxlY3Rpb24pIHsKICAgICAgc2V0U2VsZWN0aW9uKHByb3BzLmVkaXRvci5zZWxlY3Rpb24pOwogICAgfQogIH0sIFtwcm9wcy5lZGl0b3Iuc2VsZWN0aW9uXSk7CiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHsKICAgIGlmICh2aXNpYmxlKSB7CiAgICAgIHBhcnNlSW1nUmVmLmN1cnJlbnQuYWRkRXZlbnRMaXN0ZW5lcigncGFzdGUnLCBmdW5jdGlvbiAoZSkgewogICAgICAgIC8vIGNvbnNvbGUubG9nKCdlPT09PicsIGUpOwogICAgICAgIGlmIChlLmNsaXBib2FyZERhdGEpIHsKICAgICAgICAgIGlmIChwcmV2aWV3SW1hZ2UpIHsKICAgICAgICAgICAgc2V0UHJldmlld0ltYWdlKG51bGwpOwogICAgICAgICAgICBzZXRJZGVudGlmeVJlc3VsdChudWxsKTsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgaXRlbXMgPSBlLmNsaXBib2FyZERhdGEuaXRlbXM7CgogICAgICAgICAgaWYgKGl0ZW1zKSB7CiAgICAgICAgICAgIHZhciBpdGVtID0gaXRlbXNbMF07CgogICAgICAgICAgICBpZiAoaXRlbSAmJiBpdGVtLmtpbmQgPT09ICdmaWxlJyAmJiBpdGVtLnR5cGUuaW5kZXhPZignaW1hZ2UnKSAhPT0gLTEpIHsKICAgICAgICAgICAgICBzZXRMb2FkaW5nKHRydWUpOwogICAgICAgICAgICAgIHZhciBibG9iID0gaXRlbS5nZXRBc0ZpbGUoKTsKICAgICAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CgogICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgIHZhciBpbWFnZSA9IG5ldyBJbWFnZSgpOwogICAgICAgICAgICAgICAgaW1hZ2Uuc3JjID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgICAgICAgaW1hZ2Uub25sb2FkID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBpbWFnZVdpZHRoLCBpbWFnZUhlaWdodCwgX3lpZWxkJGlkZW50aWZ5Rm9ybXVsLCBfeWllbGQkaWRlbnRpZnlGb3JtdWwyLCBjb25maWRlbmNlLCBodG1sLCBkYXRhLCByZXN1bHRzTU1MLCByZXN1bHRzTGF0ZXgsIGxhdGV4UmVzLCBjb252ZXJ0UmVzdWx0RWw7CgogICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlV2lkdGggPSBpbWFnZS53aWR0aDsKICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZUhlaWdodCA9IGltYWdlLmhlaWdodDsKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaWRlbnRpZnlGb3JtdWxhRnJvbUltYWdlKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlOiBibG9iCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3lpZWxkJGlkZW50aWZ5Rm9ybXVsID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICBfeWllbGQkaWRlbnRpZnlGb3JtdWwyID0gX3lpZWxkJGlkZW50aWZ5Rm9ybXVsLmRhdGE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlkZW5jZSA9IF95aWVsZCRpZGVudGlmeUZvcm11bDIuY29uZmlkZW5jZTsKICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sID0gX3lpZWxkJGlkZW50aWZ5Rm9ybXVsMi5odG1sOwogICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkaWRlbnRpZnlGb3JtdWwyLmRhdGE7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb25maWRlbmNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzTU1MID0gZGF0YS5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQudHlwZSA9PT0gJ21hdGhtbCc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHNMYXRleCA9IGRhdGEuZmlsdGVyKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkLnR5cGUgPT09ICdsYXRleCc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5tYXAoZnVuY3Rpb24gKGxhdGV4KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBsYXRleC52YWx1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRzTGF0ZXgubGVuZ3RoID4gMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXRleFJlcyA9ICJcXGJlZ2lue2FsaWduZWR9JlxcYmVnaW57YXJyYXl9e2x9Ii5jb25jYXQocmVzdWx0c0xhdGV4LmpvaW4oJ1xcXFwnKSwgIlxcZW5ke2FycmF5fVxcZW5ke2FsaWduZWR9Iik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnRSZXN1bHRFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVydFJlc3VsdEVsLmlubmVyVGV4dCA9IGxhdGV4UmVzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJ0UmVzdWx0RWwuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVydFJlc3VsdEVsLnNldEF0dHJpYnV0ZSgnaWQnLCAnY29udmVydFJlc3VsdEVsJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udmVydFJlc3VsdEVsKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWF0aEpheC5IdWIuVHlwZXNldChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udmVydFJlc3VsdEVsJyksIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbW1sUmVzdWx0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbnZlcnRSZXN1bHRFbCAuTWF0aEpheF9EaXNwbGF5IC5NYXRoSmF4JykuZ2V0QXR0cmlidXRlKCdkYXRhLW1hdGhtbCcpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldElkZW50aWZ5UmVzdWx0KFt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbW1sUmVzdWx0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnZlcnRSZXN1bHRFbCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRJZGVudGlmeVJlc3VsdChfdmlzaWJsZSA/IHJlc3VsdHNNTUwgOiBudWxsKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzTU1MLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGdldFNWR1dpZHRoUmVnRXhwID0gL3dpZHRoPSIoXGQqXFMqKWV4Ii9nOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZ2V0U1ZHSGVpZ2h0UmVnRXhwID0gL2hlaWdodD0iKFxkKlxTKilleCIvZzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0U1ZHV2lkdGhSZWdFeHAubGFzdEluZGV4ID0gaW5kZXg7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldFNWR1dpZHRoUmVnRXhwLmxhc3RJbmRleCA9IGluZGV4OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3ZnV2lkdGggPSBnZXRTVkdXaWR0aFJlZ0V4cC5leGVjKGh0bWwpWzFdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3ZnSGVpZ2h0ID0gZ2V0U1ZHSGVpZ2h0UmVnRXhwLmV4ZWMoaHRtbClbMV07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByYXRpbyA9IGltYWdlV2lkdGggLyBpbWFnZUhlaWdodDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbWFnZVdpZHRoID4gaW1hZ2VIZWlnaHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sID0gaHRtbC5yZXBsYWNlKHN2Z1dpZHRoICsgJ2V4JywgJzgwMHB4Jyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHRtbCA9IGh0bWwucmVwbGFjZShzdmdIZWlnaHQgKyAnZXgnLCA4MDAgLyByYXRpbyAvIHJlc3VsdHNNTUwubGVuZ3RoICogMC43ICsgJ3B4Jyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHRtbCA9IGh0bWwucmVwbGFjZShzdmdXaWR0aCArICdleCcsIDM0MCAqIHJhdGlvIC8gcmVzdWx0c01NTC5sZW5ndGggKyAncHgnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sID0gaHRtbC5yZXBsYWNlKHN2Z0hlaWdodCArICdleCcsICczNDBweCcpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFByZXZpZXdJbWFnZShfdmlzaWJsZSA/IGh0bWwgOiBudWxsKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgVGlwcy5vcGVuKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogIlx1OEJGN1x1NEUwQVx1NEYyMFx1NTE2Q1x1NUYwRlx1NTZGRVx1NzI0NyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdmYWlsJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZTogMTAwMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMzsKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgICAgICAgICAgIFRpcHMub3Blbih7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAiXHU3RjUxXHU3RURDXHU5NTE5XHU4QkVGXHVGRjBDXHU4QkY3XHU3QTBEXHU1NDBFXHU5MUNEXHU4QkQ1IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdmYWlsJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWU6IDEwMDAKICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE2OwogICAgICAgICAgICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5maW5pc2goMTYpOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1syLCAxMywgMTYsIDE5XV0pOwogICAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChibG9iKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBUaXBzLm9wZW4oewogICAgICAgICAgICAgICAgbWVzc2FnZTogIlx1OEJGN1x1NTcyOFx1NkI2NFx1NTkwNFx1N0M5OFx1OEQzNFx1NTZGRVx1NzI0NyIsCiAgICAgICAgICAgICAgICB0eXBlOiAnZmFpbCcsCiAgICAgICAgICAgICAgICB0aW1lOiAxMDAwCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zb2xlLmxvZyhkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYScpKTsKICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSAqLwoKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYScpLmZvY3VzKCk7CiAgICAgIH0sIDEwMCk7CiAgICB9IGVsc2UgewogICAgICBzZXRQcmV2aWV3SW1hZ2UobnVsbCk7CiAgICAgIHNldElkZW50aWZ5UmVzdWx0KG51bGwpOwogICAgfQogIH0sIFt2aXNpYmxlXSk7CgogIGZ1bmN0aW9uIF9vbk9rKCkgewogICAgcHJvcHMuZWRpdG9yLnNlbGVjdGlvbiA9IHNlbGVjdGlvbjsKICAgIFRyYW5zZm9ybXMuc2V0U2VsZWN0aW9uKHByb3BzLmVkaXRvciwgc2VsZWN0aW9uKTsKICAgIGlkZW50aWZ5UmVzdWx0LmZvckVhY2goZnVuY3Rpb24gKGZvcm11bGEpIHsKICAgICAgVHJhbnNmb3Jtcy5pbnNlcnROb2Rlcyhwcm9wcy5lZGl0b3IsIHsKICAgICAgICB0eXBlOiAnbWVudGlvbicsCiAgICAgICAgbWVkaWFUeXBlOiAnRk9STVVMQScsCiAgICAgICAgY2hhcmFjdGVyOiBmb3JtdWxhLnZhbHVlLAogICAgICAgIHRhZzogU3RyaW5nKE1hdGgucmFuZG9tKCkpLnJlcGxhY2UoJ1wuJywgJycpLAogICAgICAgIGNoaWxkcmVuOiBbewogICAgICAgICAgdGV4dDogJyAnLAogICAgICAgICAgbWFyazogW10KICAgICAgICB9XQogICAgICB9KTsKICAgIH0pOwogICAgc2V0VmlzaWJsZShmYWxzZSk7CiAgICBzZXRJc1BhcnNlSW5wdXQoZmFsc2UpOwogICAgcHJvcHMuY2hhbmdlRm9jdXNlKGZhbHNlKTsKICAgIHByb3BzLmlzRm9jdXNlICYmIHByb3BzLnBvc3Rpb24gJiYgcHJvcHMucG9zdGlvbihfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1vZGFsUG9zaXRpb24pLCB7fSwgewogICAgICB2aXNpYmxlOiBmYWxzZQogICAgfSkpOwogIH0KCiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBfX3NlbGY6IF90aGlzLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjEzLAogICAgICBjb2x1bW5OdW1iZXI6IDkKICAgIH0KICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHsKICAgIGNsYXNzTmFtZTogcHJvcHMuaXNGb2N1c2UgPyAndGFiYmFySWNvbicgOiAnJywKICAgIGFjdGl2ZTogZmFsc2UsCiAgICBzdHlsZTogewogICAgICB3aWR0aDogJzI0cHgnLAogICAgICBoZWlnaHQ6ICcyNHB4JywKICAgICAgdGV4dEFsaWduOiAnY2VudGVyJywKICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsCiAgICAgIHRvcDogJzBweCcKICAgIH0sCiAgICBvbk1vdXNlRG93bjogZnVuY3Rpb24gb25Nb3VzZURvd24oZXZlbnQpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKCiAgICAgIGlmIChwcm9wcy5pc0ZvY3VzZSkgewogICAgICAgIF92aXNpYmxlID0gdHJ1ZTsKICAgICAgfQoKICAgICAgcHJvcHMuaXNGb2N1c2UgJiYgc2V0VmlzaWJsZSh0cnVlKTsKICAgICAgcHJvcHMuaXNGb2N1c2UgJiYgcHJvcHMuc2V0VmlzaWJsZSAmJiBwcm9wcy5zZXRWaXNpYmxlKHRydWUpOwogICAgICBwcm9wcy5pc0ZvY3VzZSAmJiBwcm9wcy5wb3N0aW9uICYmIHByb3BzLnBvc3Rpb24oX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtb2RhbFBvc2l0aW9uKSwge30sIHsKICAgICAgICB2aXNpYmxlOiB0cnVlCiAgICAgIH0pKTsKICAgICAgcHJvcHMuY2hhbmdlRm9jdXNlKHRydWUpOwogICAgfSwKICAgIF9fc2VsZjogX3RoaXMsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMTQsCiAgICAgIGNvbHVtbk51bWJlcjogMTMKICAgIH0KICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsKICAgIHN0eWxlOiB7CiAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLAogICAgICB3aWR0aDogJzI0cHgnLAogICAgICBoZWlnaHQ6ICcyNHB4JywKICAgICAgbGluZUhlaWdodDogJzI0cHgnCiAgICB9LAogICAgX19zZWxmOiBfdGhpcywKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIzOCwKICAgICAgY29sdW1uTnVtYmVyOiAxNwogICAgfQogIH0sIGluc2VydEZvcm11bGEsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgewogICAgY2xhc3NOYW1lOiAidGl0bGUiLAogICAgc3R5bGU6IHsKICAgICAgd2lkdGg6ICIxMDBweCIsCiAgICAgIGhlaWdodDogJzIwcHgnLAogICAgICBsaW5lSGVpZ2h0OiAnMjBweCcKICAgIH0sCiAgICBfX3NlbGY6IF90aGlzLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjQwLAogICAgICBjb2x1bW5OdW1iZXI6IDIxCiAgICB9CiAgfSwgcHJvcHMudGl0bGUpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBfX3NlbGY6IF90aGlzLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjQ4LAogICAgICBjb2x1bW5OdW1iZXI6IDEzCiAgICB9CiAgfSwKICAvKiBlc2xpbnQtZGlzYWJsZSAqLwogIHZpc2libGUgJiYgcHJvcHMuaXNGb2N1c2UgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChEcmFnTW9kZWwsIHsKICAgIHN0eWxlOiB7CiAgICAgIHdpZHRoOiAnMTAwMHB4JywKICAgICAgaGVpZ2h0OiAnNTAwcHgnLAogICAgICBsZWZ0OiBtb2RhbFBvc2l0aW9uLmxlZnQsCiAgICAgIHRvcDogbW9kYWxQb3NpdGlvbi50b3AKICAgIH0sCiAgICB0aXRsZTogIlx1NEVDRVx1NTZGRVx1NzI0N1x1NjNEMlx1NTE2NVx1NTE2Q1x1NUYwRiIsCiAgICBvbkNhbmNsZTogZnVuY3Rpb24gb25DYW5jbGUoKSB7CiAgICAgIHNldFZpc2libGUoZmFsc2UpOwogICAgICBzZXRMb2FkaW5nKGZhbHNlKTsKICAgICAgX3Zpc2libGUgPSBmYWxzZTsKICAgICAgcHJvcHMuaXNGb2N1c2UgJiYgcHJvcHMucG9zdGlvbiAmJiBwcm9wcy5wb3N0aW9uKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbW9kYWxQb3NpdGlvbiksIHt9LCB7CiAgICAgICAgdmlzaWJsZTogZmFsc2UsCiAgICAgICAgaXNDbG9zZU1lZG9hbDogdHJ1ZQogICAgICB9KSk7CiAgICAgIHNldElkZW50aWZ5UmVzdWx0KG51bGwpOwogICAgfSwKICAgIG9uT2s6IGZ1bmN0aW9uIG9uT2soKSB7CiAgICAgIHJldHVybiBfb25PaygpOwogICAgfSwKICAgIGlzTW9kYWxzOiB0cnVlLAogICAgX19zZWxmOiBfdGhpcywKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI1MywKICAgICAgY29sdW1uTnVtYmVyOiA0OQogICAgfQogIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJwYXJzZS1ib2R5IGlkZW50aWZ5U3BpbiIsCiAgICBfX3NlbGY6IF90aGlzLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjc1LAogICAgICBjb2x1bW5OdW1iZXI6IDI1CiAgICB9CiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoX1NwaW4sIHsKICAgIHNwaW5uaW5nOiBsb2FkaW5nLAogICAgdGlwOiAiXHU2QjYzXHU1NzI4XHU4RjZDXHU2MzYyXHU0RTJELi4uIiwKICAgIF9fc2VsZjogX3RoaXMsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNzYsCiAgICAgIGNvbHVtbk51bWJlcjogMjkKICAgIH0KICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgidGV4dGFyZWEiLCB7CiAgICByZWY6IHBhcnNlSW1nUmVmLAogICAgcm93czogIjEwIiwKICAgIGlkOiAiYSIsCiAgICBjbGFzc05hbWU6ICdwYXJzZS1pbnB1dCcsCiAgICBvbkZvY3VzOiBmdW5jdGlvbiBvbkZvY3VzKCkgewogICAgICBzZXRJc1BhcnNlSW5wdXQodHJ1ZSk7CiAgICB9LAogICAgb25CbHVyOiBmdW5jdGlvbiBvbkJsdXIoKSB7CiAgICAgIHNldElzUGFyc2VJbnB1dChmYWxzZSk7CiAgICB9LAogICAgX19zZWxmOiBfdGhpcywKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI3NywKICAgICAgY29sdW1uTnVtYmVyOiAzMwogICAgfQogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAicGFyc2UtZGl2IiwKICAgIHN0eWxlOiB7CiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJwogICAgfSwKICAgIF9fc2VsZjogX3RoaXMsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyODIsCiAgICAgIGNvbHVtbk51bWJlcjogMzMKICAgIH0KICB9LCAhcHJldmlld0ltYWdlID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICBfX3NlbGY6IF90aGlzLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjgzLAogICAgICBjb2x1bW5OdW1iZXI6IDU1CiAgICB9CiAgfSwgIlx1OEJGN1x1NUMwNlx1NTZGRVx1NzI0N1x1N0M5OFx1OEQzNFx1NTIzMFx1NkI2NFx1NTkwNCIpIDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIF9fc2VsZjogX3RoaXMsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyODQsCiAgICAgIGNvbHVtbk51bWJlcjogNDEKICAgIH0KICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgc3R5bGU6IHsKICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsCiAgICAgIGxlZnQ6IDIwLAogICAgICB0b3A6IDQwLAogICAgICB3aWR0aDogJzEwMCUnLAogICAgICBtYXJnaW5Cb3R0b206IDIwLAogICAgICBmb250U2l6ZTogMTgKICAgIH0sCiAgICBfX3NlbGY6IF90aGlzLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjg1LAogICAgICBjb2x1bW5OdW1iZXI6IDQ1CiAgICB9CiAgfSwgIlx1OEJDNlx1NTIyQlx1N0VEM1x1Njc5QyIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgc3R5bGU6IHsKICAgICAgcGFkZGluZ1RvcDogMzIKICAgIH0sCiAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDogewogICAgICBfX2h0bWw6IHByZXZpZXdJbWFnZQogICAgfSwKICAgIF9fc2VsZjogX3RoaXMsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyODYsCiAgICAgIGNvbHVtbk51bWJlcjogNDUKICAgIH0KICB9KSkpKSkpIDogJycpKTsKfTsKCl9fc2lnbmF0dXJlX18oSW5zZXJ0Rm9ybXVsYSwgInVzZVN0YXRle1t2aXNpYmxlLCBzZXRWaXNpYmxlXShmYWxzZSl9XG51c2VTdGF0ZXtbbW9kYWxQb3NpdGlvbiwgc2V0TW9kYWxQb3NpdGlvbl0ocHJvcHMubW9kYWxQb3NpdGlvbil9XG51c2VTdGF0ZXtbcHJldmlld0ltYWdlLCBzZXRQcmV2aWV3SW1hZ2VdKGZhbHNlKX1cbnVzZVN0YXRle1tpZGVudGlmeVJlc3VsdCwgc2V0SWRlbnRpZnlSZXN1bHRdKG51bGwpfVxudXNlU3RhdGV7W2xvYWRpbmcsIHNldExvYWRpbmddKGZhbHNlKX1cbnVzZVN0YXRle1tzZWxlY3Rpb24sIHNldFNlbGVjdGlvbl0obnVsbCl9XG51c2VTdGF0ZXtbaXNQYXJzZUlucHV0LCBzZXRJc1BhcnNlSW5wdXRdKGZhbHNlKX1cbnVzZVJlZntwYXJzZUltZ1JlZn1cbnVzZUVmZmVjdHt9XG51c2VFZmZlY3R7fVxudXNlRWZmZWN0e31cbnVzZUVmZmVjdHt9Iik7Cgp2YXIgX2RlZmF1bHQgPSBJbnNlcnRGb3JtdWxhOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgSW5zZXJ0Rm9ybXVsYSAhPT0gJ3VuZGVmaW5lZCcgJiYgSW5zZXJ0Rm9ybXVsYSAmJiBJbnNlcnRGb3JtdWxhID09PSBPYmplY3QoSW5zZXJ0Rm9ybXVsYSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShJbnNlcnRGb3JtdWxhKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShJbnNlcnRGb3JtdWxhLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiSW5zZXJ0Rm9ybXVsYSIsCiAgICAgIGZpbGVuYW1lOiAic3JjXFxRdWVzdGlvbkVkaXRvclxcZWRpdG9yXFxpY29uQ29tcGVudHNcXEluc2VydEZvcm11bGEudHN4IgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0IDogdW5kZWZpbmVkOwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihUYWJQYW5lLCAiVGFiUGFuZSIsICJGOlxcc2xhdGVcXGVhc3RlZHVDb21wb2VudHNcXHNyY1xcUXVlc3Rpb25FZGl0b3JcXGVkaXRvclxcaWNvbkNvbXBlbnRzXFxJbnNlcnRGb3JtdWxhLnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF92aXNpYmxlLCAiX3Zpc2libGUiLCAiRjpcXHNsYXRlXFxlYXN0ZWR1Q29tcG9lbnRzXFxzcmNcXFF1ZXN0aW9uRWRpdG9yXFxlZGl0b3JcXGljb25Db21wZW50c1xcSW5zZXJ0Rm9ybXVsYS50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihJbnNlcnRGb3JtdWxhLCAiSW5zZXJ0Rm9ybXVsYSIsICJGOlxcc2xhdGVcXGVhc3RlZHVDb21wb2VudHNcXHNyY1xcUXVlc3Rpb25FZGl0b3JcXGVkaXRvclxcaWNvbkNvbXBlbnRzXFxJbnNlcnRGb3JtdWxhLnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICJGOlxcc2xhdGVcXGVhc3RlZHVDb21wb2VudHNcXHNyY1xcUXVlc3Rpb25FZGl0b3JcXGVkaXRvclxcaWNvbkNvbXBlbnRzXFxJbnNlcnRGb3JtdWxhLnRzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwubGVhdmVNb2R1bGUgOiB1bmRlZmluZWQ7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["F:/slate/easteduCompoents/src/QuestionEditor/editor/iconCompents/InsertFormula.tsx"],"names":["React","useState","useEffect","useRef","Button","insertFormula","DragModel","Transforms","identifyFormulaFromImage","Tips","TabPane","_visible","InsertFormula","props","visible","setVisible","modalPosition","setModalPosition","previewImage","setPreviewImage","identifyResult","setIdentifyResult","loading","setLoading","selection","setSelection","isParseInput","setIsParseInput","parseImgRef","focusHandler","target","className","getAttribute","focus","document","addEventListener","cleanup","removeEventListener","editor","current","e","clipboardData","items","item","kind","type","indexOf","blob","getAsFile","fileReader","FileReader","onload","image","Image","src","result","imageWidth","width","imageHeight","height","data","confidence","html","resultsMML","filter","d","resultsLatex","map","latex","value","length","latexRes","join","convertResultEl","createElement","innerText","style","display","setAttribute","body","appendChild","MathJax","Hub","Typeset","getElementById","mmlResult","querySelector","removeChild","forEach","index","getSVGWidthRegExp","getSVGHeightRegExp","lastIndex","svgWidth","exec","svgHeight","ratio","replace","open","message","time","readAsDataURL","setTimeout","console","log","onOk","formula","insertNodes","mediaType","character","tag","String","Math","random","children","text","mark","changeFocuse","isFocuse","postion","textAlign","position","top","event","preventDefault","lineHeight","title","left","isCloseMedoal","overflow","marginBottom","fontSize","paddingTop","__html"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport { Spin, Tabs } from 'antd';\r\nimport _ from 'lodash';\r\nimport { Button } from '../components';\r\nimport { insertFormula } from '../toolbarIcon';\r\nimport DragModel from '../../../DragModel/index';\r\nimport { symbolList } from '../client';\r\nimport { Editor, Node, Transforms, createEditor } from 'slate';\r\n\r\nimport './iconCompents.less';\r\nimport { identifyFormulaFromImage } from '../../services/EditdQuestion';\r\n\r\n\r\n\r\n// import { Tips } from '../../index';\r\nimport { Tips } from '../../../MessageTips/index';\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nlet _visible = true;\r\n\r\n\r\nconst InsertFormula = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [modalPosition, setModalPosition] = useState(props.modalPosition);\r\n    const [previewImage, setPreviewImage] = useState(false);\r\n    const [identifyResult, setIdentifyResult] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selection, setSelection] = useState(null);\r\n    const [isParseInput, setIsParseInput] = useState(false);\r\n\r\n    const parseImgRef = useRef();\r\n\r\n    function focusHandler({ target }) {\r\n        const className = target.getAttribute('class');\r\n        if (className === 'parse-input') {\r\n            setIsParseInput(true);\r\n            target.focus();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', focusHandler);\r\n\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('click', focusHandler);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        // console.log('props.modalPosition==>', props.modalPosition);\r\n\r\n        setModalPosition(props.modalPosition);\r\n        // setVisible(props.modalPosition.visible);\r\n\r\n    }, [props.modalPosition]);\r\n\r\n    useEffect(() => {\r\n        if (props.editor.selection) {\r\n            setSelection(props.editor.selection);\r\n        }\r\n    }, [props.editor.selection]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            parseImgRef.current.addEventListener('paste', (e) => {\r\n\r\n                // console.log('e===>', e);\r\n                if (e.clipboardData) {\r\n                    if (previewImage) {\r\n                        setPreviewImage(null);\r\n                        setIdentifyResult(null);\r\n                    }\r\n                    const { items } = e.clipboardData;\r\n                    if (items) {\r\n                        const item = items[0];\r\n                        if (item && item.kind === 'file' && item.type.indexOf('image') !== -1) {\r\n                            setLoading(true);\r\n                            let blob = item.getAsFile();\r\n                            let fileReader = new FileReader();\r\n                            fileReader.onload = (e) => {\r\n                                let image = new Image();\r\n                                image.src = e.target.result;\r\n                                image.onload = async () => {\r\n                                    const imageWidth = image.width;\r\n                                    const imageHeight = image.height;\r\n                                    try {\r\n                                        let { data: { confidence, html, data }} = await identifyFormulaFromImage({\r\n                                            image: blob\r\n                                        });\r\n\r\n                                        if (confidence) {\r\n                                            let resultsMML = data.filter((d) => {\r\n                                                return d.type === 'mathml';\r\n                                            });\r\n                                            let resultsLatex = data.filter((d) => {\r\n                                                return d.type === 'latex';\r\n                                            }).map((latex) => latex.value);\r\n                                            if (resultsLatex.length > 1) {\r\n                                                let latexRes = `\\\\begin{aligned}&\\\\begin{array}{l}${resultsLatex.join(\r\n                                                    '\\\\\\\\',\r\n                                                )}\\\\end{array}\\\\end{aligned}`;\r\n                                                let convertResultEl = document.createElement('span');\r\n                                                convertResultEl.innerText = latexRes;\r\n                                                convertResultEl.style.display = 'none';\r\n                                                convertResultEl.setAttribute('id', 'convertResultEl');\r\n                                                document.body.appendChild(convertResultEl);\r\n                                                MathJax.Hub.Typeset(\r\n                                                    document.getElementById('convertResultEl'),\r\n                                                    () => {\r\n                                                        const mmlResult = document\r\n                                                            .querySelector(\r\n                                                                '#convertResultEl .MathJax_Display .MathJax',\r\n                                                            )\r\n                                                            .getAttribute('data-mathml');\r\n                                                        setIdentifyResult([{ value: mmlResult }]);\r\n                                                        document.body.removeChild(\r\n                                                            document.getElementById('convertResultEl'),\r\n                                                        );\r\n                                                    },\r\n                                                );\r\n                                            } else {\r\n                                              setIdentifyResult(_visible ? resultsMML : null);\r\n                                            }\r\n                                            resultsMML.forEach((result, index) => {\r\n                                                let getSVGWidthRegExp = /width=\"(\\d*\\S*)ex\"/g;\r\n                                                let getSVGHeightRegExp = /height=\"(\\d*\\S*)ex\"/g;\r\n                                                getSVGWidthRegExp.lastIndex = index;\r\n                                                getSVGWidthRegExp.lastIndex = index;\r\n                                                let svgWidth = getSVGWidthRegExp.exec(html)[1];\r\n                                                let svgHeight = getSVGHeightRegExp.exec(html)[1];\r\n                                                let ratio = imageWidth / imageHeight;\r\n                                                if (imageWidth > imageHeight) {\r\n                                                    html = html.replace(svgWidth + 'ex', '800px');\r\n                                                    html = html.replace(svgHeight + 'ex', 800 / ratio / resultsMML.length * 0.7 + 'px');\r\n                                                } else {\r\n                                                    html = html.replace(svgWidth + 'ex', 340 * ratio / resultsMML.length + 'px');\r\n                                                    html = html.replace(svgHeight + 'ex', '340px');\r\n                                                }\r\n                                            });\r\n                                            setPreviewImage(_visible ? html : null);\r\n                                        } else {\r\n                                            Tips.open({\r\n                                                message: `请上传公式图片`,\r\n                                                type: 'fail',\r\n                                                time: 1000\r\n                                            });\r\n                                        }\r\n                                    } catch (e) {\r\n                                        Tips.open({\r\n                                            message: `网络错误，请稍后重试`,\r\n                                            type: 'fail',\r\n                                            time: 1000\r\n                                        });\r\n                                    } finally {\r\n                                        setLoading(false);\r\n                                    }\r\n                                };\r\n                            };\r\n                            fileReader.readAsDataURL(blob);\r\n                        } else {\r\n                            Tips.open({\r\n                                message: `请在此处粘贴图片`,\r\n                                type: 'fail',\r\n                                time: 1000\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            setTimeout(() => {\r\n                console.log(document.getElementById('a'));\r\n                /* eslint-disable */\r\n                document.getElementById('a').focus();\r\n            }, 100);\r\n        } else {\r\n            setPreviewImage(null);\r\n            setIdentifyResult(null);\r\n        }\r\n    }, [visible]);\r\n\r\n    function onOk() {\r\n        props.editor.selection = selection;\r\n        Transforms.setSelection(props.editor, selection);\r\n        identifyResult.forEach((formula) => {\r\n            Transforms.insertNodes(props.editor, {\r\n                type: 'mention',\r\n                mediaType: 'FORMULA',\r\n                character: formula.value,\r\n                tag: String(Math.random()).replace('\\.', ''),\r\n                children: [{ text: ' ', mark: [] }],\r\n            });\r\n        });\r\n        setVisible(false);\r\n        setIsParseInput(false);\r\n\r\n        props.changeFocuse(false);\r\n\r\n        props.isFocuse && props.postion && props.postion({\r\n            ...modalPosition,\r\n            visible: false\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                className={props.isFocuse ? 'tabbarIcon' : ''}\r\n                active={false}\r\n                style={{ width: '24px', height: '24px', textAlign: 'center', position: 'relative', top: '0px' }}\r\n                onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n\r\n                    if (props.isFocuse) {\r\n                        _visible = true;\r\n                    }\r\n\r\n                    props.isFocuse && setVisible(true);\r\n\r\n                    props.isFocuse && props.setVisible && props.setVisible(true);\r\n\r\n                    props.isFocuse && props.postion && props.postion({\r\n                        ...modalPosition,\r\n                        visible: true\r\n                    });\r\n\r\n                    props.changeFocuse(true);\r\n\r\n                }}\r\n            >\r\n                <span style={{ display: 'inline-block', width: '24px', height: '24px', lineHeight: '24px' }}>\r\n                    {insertFormula}\r\n                    <span className=\"title\" style={{ width: `100px`, height: '20px', lineHeight: '20px' }}>\r\n                        {props.title}\r\n                    </span>\r\n                    {/* <span style={{ fontSize: '10px', width: '27px', position: 'absolute', bottom: '-20px', left: '0px' }}>符号</span> */}\r\n                </span>\r\n\r\n\r\n            </Button>\r\n            <div>\r\n                {/* && props.isFocuse */}\r\n\r\n                {\r\n                    /* eslint-disable */\r\n                    visible && props.isFocuse ? <DragModel\r\n                        style={{\r\n                            width: '1000px',\r\n                            height: '500px',\r\n                            left: modalPosition.left,\r\n                            top: modalPosition.top\r\n                        }}\r\n                        title=\"从图片插入公式\"\r\n                        onCancle={() => {\r\n                            setVisible(false);\r\n                            setLoading(false);\r\n                            _visible = false;\r\n                            props.isFocuse && props.postion && props.postion({\r\n                                ...modalPosition,\r\n                                visible: false,\r\n                                isCloseMedoal: true\r\n                            });\r\n                            setIdentifyResult(null);\r\n                        }}\r\n                        onOk={() => onOk()}\r\n                        isModals={true}\r\n                    >\r\n                        <div className=\"parse-body identifySpin\">\r\n                            <Spin spinning={loading} tip=\"正在转换中...\">\r\n                                <textarea ref={parseImgRef} rows=\"10\" id=\"a\" className={'parse-input'} onFocus={() => {\r\n                                    setIsParseInput(true)\r\n                                }} onBlur={() => {\r\n                                    setIsParseInput(false)\r\n                                }} />\r\n                                <div className=\"parse-div\" style={{ overflow: 'hidden' }}>\r\n                                    {!previewImage ? (<span>请将图片粘贴到此处</span>) : (\r\n                                        <div>\r\n                                            <div style={{ position: 'absolute', left: 20, top: 40, width: '100%', marginBottom: 20, fontSize: 18 }}>识别结果</div>\r\n                                            <div style={{ paddingTop: 32 }} dangerouslySetInnerHTML={{ __html: previewImage }} />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Spin>\r\n                        </div>\r\n                    </DragModel> : ''\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default InsertFormula;\r\n"]}]}
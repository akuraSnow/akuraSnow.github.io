{"remainingRequest":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js!F:\\slate\\easteduCompoents\\src\\QuestionEditor\\editor\\iconCompents\\MarkFontBtn.tsx","dependencies":[{"path":"F:\\slate\\easteduCompoents\\src\\QuestionEditor\\editor\\iconCompents\\MarkFontBtn.tsx","mtime":1611718618240},{"path":"F:\\slate\\easteduCompoents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611297672593},{"path":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1611297676370},{"path":"F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1611297672218},{"path":"F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js","mtime":1599723087186}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/slate/easteduCompoents/src/QuestionEditor/editor/iconCompents/MarkFontBtn.tsx"],"names":["React","useState","useEffect","_","Button1","Editor","TextIndentList","Option","toggleMark","editor","format","value","addMark","isBlockActiveNum","itemList","nodes","match","n","type","MarkFontBtn","props","setValue","visible","setVisible","onClickMenu","key","keys","split","obj","marks","val","defluteVal","fontObj","content","JSON","stringify","menu","e","map","fontList","index","background","fontWeight","event","preventDefault","width","borderColor","title","length"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Select, Dropdown, Menu } from 'antd';\r\nimport _ from 'lodash';\r\nimport { Button1 } from '../components';\r\nimport { Editor, Transforms, createEditor } from 'slate';\r\n\r\nimport {\r\n    fontSizeObj,\r\n} from '../client';\r\n\r\nconst TextIndentList = ['宋体', '楷体', 'TIMES NEW ROMAN'];\r\nconst { Option } = Select;\r\n\r\nconst toggleMark = (editor, format, value) => {\r\n    // const isActive = isMarkActive(editor, format);\r\n\r\n\r\n    Editor.addMark(editor, format, value);\r\n};\r\n\r\n\r\n// 获取选中的数据\r\nconst isBlockActiveNum = (editor, format, itemList) => {\r\n    const [match] = Editor.nodes(editor, {\r\n        match: n => {\r\n            return n.type === format || n[format];\r\n        },\r\n    });\r\n\r\n    if (!!match) {\r\n        return match[0][format];\r\n    } else {\r\n        return itemList[0];\r\n    }\r\n};\r\n\r\n\r\nconst MarkFontBtn = (props) => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    function onClickMenu({ key }) {\r\n\r\n        const { editor, format } = props;\r\n\r\n        let keys = key.split('#');\r\n        toggleMark(editor, format, keys[0]);\r\n\r\n        setValue(keys[1]);\r\n        setVisible(false);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        let obj = Editor.marks(props.editor);\r\n\r\n        let val = '';\r\n\r\n        if (!props.defluteVal) {\r\n            val = obj && obj[props.format] && props.fontObj[obj[props.format]];\r\n        } else {\r\n            val = obj && obj[props.format] ? props.fontObj[obj[props.format]] : props.defluteVal.content;\r\n        }\r\n\r\n        setValue(val);\r\n\r\n    }, [JSON.stringify(props.editor)]);\r\n\r\n    // function handleChange(e) {\r\n\r\n    //     // setValue(e);\r\n    //     // toggleMark(props.editor, props.format, e);\r\n    // }\r\n\r\n    \r\n    const menu = (\r\n        <Menu onClick={(e) => onClickMenu(e)}>\r\n            {\r\n                _.map(props.fontList, (e, index) => {\r\n         \r\n                    return <Menu.Item \r\n                        key={`${e.value}#${e.content}`} \r\n                        style={{ \r\n                            background: value === e.content ? '#F5F5F5' : '#fff',\r\n                            fontWeight: value === e.content ? 'bolder' : '400'\r\n                        }}>\r\n                        <div>{e.content}</div>\r\n                    </Menu.Item>;\r\n                })\r\n            }\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button1\r\n                className=\"markFonts\"\r\n                active={menu}\r\n                onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n\r\n                }}\r\n            >\r\n\r\n                <Dropdown \r\n                    overlay={menu} \r\n                    trigger={['click']} \r\n                    onVisibleChange={(visible) => {\r\n                        setVisible(visible);\r\n                    }}\r\n                >\r\n                    <span>\r\n                        <span className=\"inputBox\" \r\n                            style={{ \r\n                                width: props.width ? `${props.width}px` : '98px',\r\n                                borderColor: visible ? '#FE8D29' : '#D9D9D9'\r\n                            }}\r\n                        >\r\n                            {value}\r\n\r\n                        </span>\r\n                        <span className=\"title\" style={{ width: `${props.title && props.title.length * 18}px` }}>\r\n                            {props.title}\r\n                        </span>\r\n                    </span>\r\n\r\n                </Dropdown>\r\n            </Button1>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default MarkFontBtn;\r\n"]}]}
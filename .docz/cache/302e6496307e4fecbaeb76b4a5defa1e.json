{"remainingRequest":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js!F:\\slate\\easteduCompoents\\src\\QuestionEditor\\services\\EditdQuestion.ts","dependencies":[{"path":"F:\\slate\\easteduCompoents\\src\\QuestionEditor\\services\\EditdQuestion.ts","mtime":1611718057344},{"path":"F:\\slate\\easteduCompoents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611297672593},{"path":"F:\\slate\\easteduCompoents\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1611297676370},{"path":"F:\\slate\\easteduCompoents\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1611297672218},{"path":"F:\\slate\\easteduCompoents\\node_modules\\source-map-loader\\index.js","mtime":1599723087186}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/slate/easteduCompoents/src/QuestionEditor/services/EditdQuestion.ts"],"names":["JAVAHttp","request","BaseConfig","javaBasic","questionanalyze","JAVAHttpFuc","state","url","data","sendData","type","formData","FormData","Object","keys","forEach","key","append","headers","params","config","JAVAHttpEbook","identifyFormulaFromImage","SaveAndPutAway","method","postSignatures","updateFile"],"mappings":"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","sourcesContent":["/*\r\n * @Description: In User Settings Edit\r\n * @Author: your name\r\n * @Date: 2019-07-25 17:53:54\r\n * @LastEditTime: 2019-11-14 13:14:50\r\n * @LastEditors: Please set LastEditors\r\n */\r\n// import Http from '../../axios/http';\r\nimport JAVAHttp from '../utils/axios/javaHttp';\r\nimport request from '../utils/request';\r\n\r\nimport BaseConfig from '../utils/axios/baseUrl';\r\n\r\nlet javaBasic = BaseConfig.questionanalyze();\r\n\r\n// @ts-ignore\r\nexport function JAVAHttpFuc(state, url, data) {\r\n\r\n    let sendData = {};\r\n\r\n    if (state !== 'get' && state !== 'postmultipart') {\r\n        sendData = {\r\n            type: state,\r\n            url: '/warehouse' + url,\r\n            data: data\r\n        }\r\n    } else if (state === 'postmultipart') {\r\n        const formData = new FormData();\r\n        Object.keys(data).forEach((key) => {\r\n            formData.append(key, data[key]);\r\n        });\r\n        sendData = {\r\n            type: 'post',\r\n            url: '/warehouse' + url,\r\n            data: formData,\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n    } else {\r\n        sendData = {\r\n            type: state,\r\n            url: '/warehouse' + url,\r\n            params: data\r\n        }\r\n    }\r\n\r\n    return JAVAHttp.config(sendData);\r\n}\r\n\r\nexport function JAVAHttpEbook(state: any, url: string, data?: any) {\r\n    let sendData = {};\r\n\r\n    if (state !== 'get') {\r\n        sendData = {\r\n            type: state,\r\n            url: '/ebook' + url,\r\n            data: data,\r\n        };\r\n    } else {\r\n        sendData = {\r\n            type: state,\r\n            url: '/ebook' + url,\r\n            params: data,\r\n        };\r\n    }\r\n    return JAVAHttp.config(sendData);\r\n}\r\n\r\n// /warehouse\r\n\r\n\r\n\r\n// 从图片识别公式\r\nexport function identifyFormulaFromImage(data: any) {\r\n    return JAVAHttpFuc('postmultipart', '/api/images/formula/text', data);\r\n}\r\n\r\n// 提交签名数据，返回签名信息（2步合一）\r\n\r\n// export function postSignatures(data) {\r\n\r\n//     return JAVAHttpFuc('post',`/ebook/api/admin/ebook/file`, data)\r\n// }\r\n\r\n\r\n// // 提交文件数据，更新数据\r\n// export async function updateFile(params) {\r\n\r\n//     return JAVAHttpFuc('put',`/ebook/api/admin/ebook/file?fileId=${params.fileId}`, {})\r\n// }\r\n\r\n// 备课包图片试题保存并上架接口\r\nexport async function SaveAndPutAway(data: any) {\r\n    return request(`javaUrl|/warehouse/api/admin/preparations/question`, {\r\n        method: 'post',\r\n        data: data\r\n    })\r\n}\r\n\r\n// 提交签名数据，返回签名信息（2步合一）\r\nexport async function postSignatures(data: any) {\r\n    return request(`javaUrl|/ebook/api/admin/ebook/file`, {\r\n        method: 'post',\r\n        data: data\r\n    });\r\n}\r\n\r\n// 提交文件数据，更新数据\r\nexport async function updateFile(data: any) {\r\n    return request(`javaUrl|/ebook/api/admin/ebook/file`, {\r\n        method: 'PUT',\r\n        data\r\n    });\r\n}\r\n"]}]}
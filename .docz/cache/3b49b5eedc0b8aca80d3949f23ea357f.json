{"remainingRequest":"F:\\next\\akuraSnow.github.io\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!F:\\next\\akuraSnow.github.io\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!F:\\next\\akuraSnow.github.io\\node_modules\\source-map-loader\\index.js!F:\\next\\akuraSnow.github.io\\src\\uploadFile\\uploadFile.tsx","dependencies":[{"path":"F:\\next\\akuraSnow.github.io\\src\\uploadFile\\uploadFile.tsx","mtime":1597627151075},{"path":"F:\\next\\akuraSnow.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594630873110},{"path":"F:\\next\\akuraSnow.github.io\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1594630874798},{"path":"F:\\next\\akuraSnow.github.io\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1594630866664},{"path":"F:\\next\\akuraSnow.github.io\\node_modules\\source-map-loader\\index.js","mtime":1594630874806}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/next/akuraSnow.github.io/src/uploadFile/uploadFile.tsx"],"names":["React","Component","Cos","jsMd5File","fileExtension","postSignatures","updateFile","UploadInput","props","uniqueId","inputFile","handleFiles","e","fileList","state","maxSize","accept","fileNameLength","files","filesList","Array","from","filter","file","name","size","extension","substring","lastIndexOf","length","indexOf","toLowerCase","error","sizeLength","value","newfileList","map","index","id","String","Math","random","replace","fileObj","status","progress","uid","url","fileId","md5","fileName","createTime","Date","getTime","downloadUrl","previewUrl","setState","concat","updateFileList","setTimeout","element","sendFiles","uploadStatus","sendFiles1","token","ext","getFileMd5","fileMd5","sendData","client","genre","guid","method","provider","response","console","log","hasExist","some","fileListItem","code","upload","hasFile","success","path","onCancelFile","CosParam","signature","bucket","region","sendCosFile","that","OSSData","getAuthorization","options","callback","putObject","Bucket","Region","Key","Body","TaskReady","onHashProgress","onProgress","round","percent","err","data","statusCode","version","updateList","md5String","Promise","resolve","reject","onRef","JSON","stringify","children","multiple","click","display"],"mappings":"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","sourcesContent":["\r\n/ tslint:disable /\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { message, Button } from 'antd';\r\n\r\n// import { Dispatch } from 'redux';\r\n// @ts-ignore\r\nimport Cos from 'cos-js-sdk-v5';\r\n// @ts-ignore\r\nimport jsMd5File from 'js-md5-file';\r\n// @ts-ignore\r\nimport fileExtension from 'file-extension';\r\n\r\nimport {\r\n  postSignatures, // 获取签名\r\n  updateFile, // 上传文件成功后，更新数据\r\n} from './servers';\r\n\r\nimport { fileListType } from './index';\r\n\r\n\r\nexport interface UploadInputbProps {\r\n  // dispatch?: Dispatch;\r\n  children: any;\r\n  accept?: string;\r\n  multiple?: boolean;\r\n  fileList: Array<fileListType>;\r\n  updateList: Function;\r\n  url: string;\r\n  maxSize: number;\r\n  fileNameLength: number;\r\n  token: string;\r\n  error: Function;\r\n  onRef?: Function;\r\n  onCancelFile?: Function;\r\n}\r\n\r\ninterface  CosParam {\r\n  signature: string;\r\n  bucket: string;\r\n  region: string;\r\n  path: string;\r\n  id: number;\r\n};\r\n\r\ninterface UploadInputState {\r\n  file: any;\r\n\r\n  fileList: fileListType[];\r\n}\r\n\r\nclass UploadInput extends Component<UploadInputbProps, UploadInputState> {\r\n  uniqueId: string = '';\r\n\r\n  private inputFile: any;\r\n\r\n  constructor(props: UploadInputbProps) {\r\n    super(props);\r\n    this.state = {\r\n      file: [],\r\n\r\n      fileList: props.fileList || [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() { \r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n\r\n  componentWillReceiveProps(props: any) {\r\n    if (JSON.stringify(props.fileList) !== JSON.stringify(this.state.fileList)) {\r\n      if (props.fileList.length < this.state.fileList.length) {\r\n        this.inputFile.value ? this.inputFile.value = null : '';\r\n      }\r\n      this.setState({\r\n        fileList: props.fileList,\r\n      });\r\n    }\r\n  }\r\n\r\n  // 点击上传文件\r\n  // @ts-ignore\r\n  handleFiles = async (e: any) => {\r\n    // const file = e.target.files[0];\r\n\r\n    const { fileList } = this.state;\r\n    const { maxSize, accept, fileNameLength } = this.props;\r\n\r\n    let files = this.inputFile.files;\r\n\r\n    if (!files) {\r\n      return false;\r\n\r\n    }\r\n\r\n    let filesList = Array.from(files).filter((file: any) => {\r\n\r\n      let name = file.name;\r\n      let size = file.size ? file.size / 1024 / 1024 : 0;\r\n      var extension = name.substring(name.lastIndexOf(\".\") + 1, name.length);//文件扩展名\r\n      // @ts-ignore\r\n      if (accept.indexOf(extension.toLowerCase()) === -1 && accept !== '*') {\r\n        this.props.error('不支持上传的文件类型！');\r\n        // this.inputFile.files[index] = null;\r\n        return false;\r\n      }\r\n  \r\n      if (!file) {\r\n        // this.inputFile.files[index] = null;\r\n        return false;\r\n      }\r\n  \r\n      // if (fileList.length > 9) {\r\n      //   this.props.error('目前仅支持上传10个附件！');\r\n      //   this.inputFile.value = null;\r\n      //   return false;\r\n      // }\r\n  \r\n      // 文件名过长的时候\r\n      if (fileNameLength && file.name.length > fileNameLength) {\r\n        this.props.error(`文件名称不能超过${fileNameLength}个字符！`);\r\n        // this.inputFile.files[index] = null;\r\n        return false;\r\n      }\r\n  \r\n      // 当文件过大的时候，进行提示\r\n      if (size > maxSize) {\r\n        let sizeLength = maxSize > 1024 ? `${maxSize / 1024}G` : `${maxSize}M`\r\n        this.props.error(`上传文件大小不能超过${sizeLength}！`);\r\n        // this.inputFile.files[index] = null;\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n  \r\n    });\r\n\r\n    if (filesList.length === 0) {\r\n      this.inputFile.value ? this.inputFile.value = null : '';\r\n      return false;\r\n    }\r\n\r\n\r\n    let newfileList = filesList.map((file: any, index: number) => {\r\n\r\n      let id =String(Math.random()).replace('\\.', '');\r\n      let name = file.name;\r\n      let size = file.size ? file.size : 0;\r\n      var extension = name.substring(name.lastIndexOf(\".\") + 1, name.length);//文件扩展名\r\n  \r\n      let fileObj = {\r\n        index: index,\r\n        id: id,\r\n        file: file,\r\n        name: file.name,\r\n        status: \"ready\",\r\n        progress: 0,\r\n        uid: '',\r\n        url: '',\r\n        fileId: '',\r\n        size: size,\r\n        md5: '',\r\n        fileName: name,\r\n        createTime: new Date().getTime(),\r\n        extension: extension,\r\n        downloadUrl: '',\r\n        previewUrl: '',\r\n      };\r\n      return fileObj\r\n    })\r\n  \r\n    this.setState({\r\n      file: filesList,\r\n      fileList: fileList.concat(newfileList)\r\n    }, () => {\r\n\r\n      this.updateFileList();\r\n\r\n      setTimeout(() => {\r\n        for (let index = 0; index < filesList.length; index++) {\r\n          const element = filesList[index];\r\n          this.sendFiles(element, newfileList[index].id);\r\n        }\r\n  \r\n      }, 10);\r\n\r\n    })\r\n\r\n  };\r\n\r\n  sendFiles = (file: any, id: string) => {\r\n    this.uploadStatus(id, {\r\n      progress: 0,\r\n      status: \"ready\",\r\n    }, () => {\r\n      this.sendFiles1(file, id)\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // 把文件传到后端\r\n  sendFiles1 = async(file: any, id: string) => {\r\n    const { url, token } = this.props;\r\n    const { fileList } = this.state;\r\n\r\n    if (!file.name) {\r\n      return false;\r\n    }\r\n    // 获取文件后缀\r\n    let ext = fileExtension(file.name).toLowerCase();\r\n\r\n    // 获取文件MD5加密\r\n    let fileMd5 = await this.getFileMd5(file);\r\n\r\n    // 请求密钥\r\n    let sendData = {\r\n      client: 'R_Center',\r\n      extension: ext,\r\n      fileName: file.name,\r\n      genre: 1,\r\n      guid: null,\r\n      md5: fileMd5,\r\n      method: 'put',\r\n      provider: 'tencent',\r\n      size: file.size,\r\n    };\r\n    \r\n    try {\r\n      let response: any = await postSignatures(sendData, url, token);\r\n      console.log(\"UploadInput -> response\", response)\r\n  \r\n      // 判断文件是否还存在\r\n      let hasExist = this.props.fileList.some((fileListItem: any) => {\r\n\r\n        return fileListItem.id === id || \r\n        fileListItem.fileId === response.fileId ||\r\n        fileListItem.id === response.fileId ||\r\n        fileListItem.md5 === response.md5;\r\n      });\r\n\r\n      // 如果是token失效的时候\r\n      if (response.code === 40100) {\r\n        this.props.error('登录已失效，请重新登录！', 401);\r\n\r\n        return false;\r\n      }\r\n     \r\n\r\n      \r\n      /**当文件存在的时候**/\r\n      if (response && response.upload && hasExist) {\r\n        this.uploadStatus(id, {\r\n          progress: 100,\r\n          status: \"uploading\",\r\n        });\r\n\r\n        this.inputFile.value ? this.inputFile.value = null : '';\r\n   \r\n        // 判断文件是否已经存在\r\n        let hasFile = this.state.fileList.some((fileListItem: any) => {\r\n        \r\n          return fileListItem.uid === response.fileId || \r\n          fileListItem.fileId === response.fileId ||\r\n          fileListItem.md5 === response.md5;\r\n        });\r\n\r\n\r\n        if (!hasFile) {\r\n          message.success(`${file.name}  文件上传成功!`);\r\n\r\n          setTimeout(() => {\r\n            this.uploadStatus(id, {\r\n              progress: 100,\r\n              uid: response.fileId,\r\n              status: \"done\",\r\n              name: file.name,\r\n              url: response.path,\r\n              fileId: response.fileId,\r\n              md5: response.md5,\r\n              downloadUrl: response.path,\r\n              previewUrl: response.path,\r\n            });\r\n          }, 500)\r\n        } else if ( hasExist ){\r\n          this.props.error('文件已存在，不能重新上传！');\r\n          this.inputFile.value ? this.inputFile.value = null : '';\r\n          this.props.onCancelFile && this.props.onCancelFile(id);\r\n        }\r\n\r\n      } else if (hasExist) {\r\n        // 设置参数\r\n        let CosParam: CosParam = {\r\n          signature: response.signature,\r\n          bucket: response.bucket,\r\n          region: response.region,\r\n          path: response.path,\r\n          id: response.fileId,\r\n        };\r\n\r\n        this.sendCosFile(file, CosParam, id);\r\n\r\n      }\r\n    } catch (err) {\r\n      this.uploadStatus(id, {\r\n        progress: 0,\r\n        status: 'error'\r\n      });\r\n      this.props.error('网络错误,请稍后重试！');\r\n      this.inputFile.value ? this.inputFile.value = null : '';\r\n    }\r\n  }\r\n\r\n  // 进行请求腾讯云文件上传\r\n  sendCosFile = (file: any, CosParam: CosParam, id: string) => {\r\n    const { fileList } = this.state;\r\n    const { url, token } = this.props;\r\n    let that = this;\r\n\r\n    let OSSData = new Cos({\r\n      // @ts-ignore\r\n      getAuthorization: function (options: any, callback: Function) {\r\n        callback(CosParam.signature);\r\n      },\r\n    });\r\n\r\n    try {\r\n      OSSData.putObject(\r\n        {\r\n          Bucket: CosParam.bucket,\r\n          Region: CosParam.region,\r\n          Key: CosParam.path,\r\n          Body: file, // 上传文件对象\r\n          // SliceSize: '5M',\r\n          // AsyncLimit: '5',\r\n          // @ts-ignore\r\n          TaskReady: function (e: any) {\r\n            /* 非必须 */\r\n          },\r\n          // @ts-ignore\r\n          onHashProgress: function (e: any) {\r\n            /* 非必须 */\r\n            //\r\n          },\r\n          onProgress: function (e: any) { \r\n\r\n            that.uploadStatus(id, {\r\n              status: \"uploading\",\r\n              progress: Math.round(e.percent * 100)\r\n            });\r\n\r\n          },\r\n        },\r\n        async function (err: any, data: any) {\r\n\r\n          // 判断文件是否还存在id\r\n          let hasExist = that.props.fileList.some((fileListItem: any) => {\r\n            return fileListItem.id === id;\r\n          });\r\n\r\n          if (!err && data.statusCode === 200 && hasExist) {\r\n        \r\n            let response: any = await updateFile({ fileId: `${CosParam.id}`, version: 1.0 }, url, token);\r\n  \r\n            if (response) {\r\n              that.inputFile.value = null;\r\n  \r\n              // 判断文件是否已经存在\r\n              let hasFile = that.state.fileList.some((fileListItem: any) => {\r\n            \r\n                return fileListItem.uid === response.id || fileListItem.fileId === response.id;\r\n              });\r\n\r\n           \r\n              if (!hasFile) {\r\n\r\n                message.success(`${file.name}  文件上传成功!`);\r\n\r\n                that.uploadStatus(id, {\r\n                  progress: 100,\r\n                  uid: response.id,\r\n                  name: response.fileName,\r\n                  status: 'done',\r\n                  url: response.path,\r\n                  fileId: response.id,\r\n                  md5: response.md5,\r\n                  downloadUrl: response.path,\r\n                  previewUrl: response.path,\r\n                });\r\n              } else {\r\n\r\n                that.props.error('文件已存在，不能重新上传！');\r\n                that.props.onCancelFile && that.props.onCancelFile(id);\r\n              }\r\n  \r\n            }\r\n          } else if (hasExist) {\r\n            that.uploadStatus(id, {\r\n              progress: 0,\r\n              status: 'error'\r\n            });\r\n\r\n            that.props.error(`${file.name}  文件上传失败!`);\r\n          }\r\n        },\r\n      );\r\n    } catch {\r\n      this.props.error('网络错误,请稍后重试！');\r\n      this.inputFile.value ? this.inputFile.value = null : '';\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // 更新不同文件的状态\r\n  uploadStatus = (id: string, options?: any, callback?: Function) => {\r\n\r\n    \r\n    // 判断文件是否已经存在\r\n    let hasFile = this.props.fileList.some((fileListItem: any) => {\r\n      return fileListItem.id === id;\r\n    });\r\n\r\n\r\n    if (hasFile) {\r\n      let newfileList = this.state.fileList.map((file: any) => {\r\n    \r\n        if (file.id === id) {\r\n          return {\r\n            ...file,\r\n            ...options\r\n          };\r\n        }\r\n        return file;\r\n      });\r\n  \r\n\r\n      this.setState({\r\n        fileList: newfileList\r\n      }, () => {\r\n        this.updateFileList();\r\n        callback && callback()\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // 当文件上传成功的时候，更新列表\r\n\r\n  updateFileList = () => {\r\n    const { file, fileList } = this.state;\r\n    this.props.updateList({\r\n      file: file,\r\n      fileList: fileList,\r\n    });\r\n  };\r\n\r\n  getFileMd5 = async (file: any) => {\r\n    let md5String = new Promise((resolve, reject) => {\r\n      jsMd5File(\r\n        file,\r\n        // @ts-ignore\r\n        (err: any, fileMd5: any) => {\r\n          if (fileMd5) {\r\n            resolve(fileMd5);\r\n          }\r\n        },\r\n        function (err: any, data: any) {\r\n          if (err === 1 && data) {\r\n            reject(data);\r\n          }\r\n        },\r\n      );\r\n    });\r\n    return md5String;\r\n  };\r\n\r\n  render() {\r\n    const { children, accept, multiple = false } = this.props;\r\n\r\n    return (\r\n      <div onClick={() => this.inputFile.click()}>\r\n        <input\r\n          type=\"file\"\r\n          name=\"file\"\r\n          accept={accept}\r\n          multiple={multiple}\r\n          onChange={(e: any) => this.handleFiles(e)}\r\n          style={{ display: 'none' }}\r\n          ref={(e: any) => (this.inputFile = e)}\r\n        />\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadInput;\r\n"]}]}
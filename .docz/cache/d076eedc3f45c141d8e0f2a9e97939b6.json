{"remainingRequest":"F:\\next\\akuraSnow.github.io\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!F:\\next\\akuraSnow.github.io\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!F:\\next\\akuraSnow.github.io\\node_modules\\source-map-loader\\index.js!F:\\next\\akuraSnow.github.io\\src\\uploadFile\\index.tsx","dependencies":[{"path":"F:\\next\\akuraSnow.github.io\\src\\uploadFile\\index.tsx","mtime":1597627532701},{"path":"F:\\next\\akuraSnow.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594630873110},{"path":"F:\\next\\akuraSnow.github.io\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1594630874798},{"path":"F:\\next\\akuraSnow.github.io\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1594630866664},{"path":"F:\\next\\akuraSnow.github.io\\node_modules\\source-map-loader\\index.js","mtime":1594630874806}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/next/akuraSnow.github.io/src/uploadFile/index.tsx"],"names":["React","Component","UploadInput","acceptName","image","video","audio","flash","word","zip","gsp","ppt","UploadFile","props","child","updateList","fileObj","setState","fileList","onChangeFileList","OnDeleteFile","id","state","newFileList","filter","item","uid","onCancelFile","reUploadFile","fileItem","sendFiles","file","getExtensionImage","fileType","getImg","pptPic","flashPic","picturePic","videoPic","wordPic","audioPic","attachmentPic","gspPic","unknownPic","key","Object","prototype","hasOwnProperty","call","Array","isArray","element","reduce","string","toLowerCase","indexOf","OSSData","files","fileMd5","onRef","JSON","stringify","url","token","fileNameLength","accept","children","maxSize","multiple","showLists","parse","ref","error","map","index","status","name","extension","progress"],"mappings":"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","sourcesContent":["import { Progress, message, Button, Icon } from 'antd';\r\n\r\nimport React, { Component } from 'react';\r\nimport './index.less';\r\n// import tEmpty from './assets/tEmpty.svg';\r\n// import Cos from 'cos-js-sdk-v5';\r\n// import jsMd5File from 'js-md5-file';\r\n// import fileExtension from 'file-extension';\r\n\r\n// import tUpload from './assets/tUploads.svg';\r\n\r\n// import iuploadFile from './assets/iuploadFile.svg';\r\n\r\n// @ts-ignore\r\nimport audioPic from './assets/ic_file_audio.svg';\r\n// @ts-ignore\r\nimport picturePic from './assets/ic_file_picture.svg';\r\n// @ts-ignore\r\nimport videoPic from './assets/ic_file_video.svg';\r\n// @ts-ignore\r\nimport unknownPic from './assets/ic_file_unknown.svg';\r\n// @ts-ignore\r\nimport attachmentPic from './assets/ic_file_attachment.svg';\r\n// @ts-ignore\r\nimport flashPic from './assets/ic_file_animate.svg';\r\n// @ts-ignore\r\nimport wordPic from './assets/ic_file_word.svg';\r\n// @ts-ignore\r\nimport pptPic from './assets/ic_file_ppt.svg';\r\n// @ts-ignore\r\nimport gspPic from './assets/ic_file_gsp.svg'\r\n// @ts-ignore\r\nimport UploadInput from './uploadFile';\r\n\r\n// const { Dragger } = Upload;\r\n\r\nexport const acceptName: any = {\r\n  image: [ 'JPG', 'PNG', 'JPEG', 'JFIF', 'PJPEG', 'PJG', 'GIF', 'BMP', 'DIB', 'GIF', 'IFF', 'JPEG', 'JPG', 'JPE', 'PNG', 'TIF', 'TIFF'],\r\n  video: ['CDA', 'WAV', 'WMA', 'RA', 'MIDI', 'OGG', 'APE', 'FLAC', 'AAC', 'mp3', 'wma', 'wav'],\r\n  audio: ['MPGE', 'MOV', 'rm', 'ram', 'mp4', 'avi', 'mkv', 'flv', 'rmvb', 'wmv', '3gp', 'asf', 'm4v'],\r\n  flash: ['swf', 'exe', 'swl'],\r\n  word: ['xls', 'xlsx', 'txt', 'doc', 'docx', 'pdf', 'text'],\r\n  zip: ['zip', 'rar', '7z'],\r\n  gsp: ['gsp', 'gss'],\r\n  ppt: ['ppt', 'pptx', 'pptm']\r\n};\r\nexport interface accessoriesType {\r\n  fileId: string;\r\n  fileName: string;\r\n  fileUrl: string;\r\n}\r\n\r\nexport interface taskItemType {\r\n  makeMode: any;\r\n  makeUserId: number;\r\n  makeUserName: string;\r\n  makeUserPhone: string;\r\n  name: string;\r\n  state: string;\r\n}\r\n\r\nexport interface UploadFileProps {\r\n  url: string;\r\n  token: any;\r\n  multiple?: boolean;\r\n  accept?: string;\r\n  maxSize?: number;\r\n  maxLength?: number;\r\n  fileNameLength: number;\r\n  error: Function;\r\n  onChangeFileList: Function;\r\n  showLists: boolean;\r\n  onRef?: Function;\r\n  fileList: any[]\r\n}\r\n\r\nexport interface fileListType {\r\n  uid: string;\r\n  name: string;\r\n  status: string;\r\n  url: string;\r\n  progress?: number;\r\n  id: string;\r\n  // thumbUrl: string;\r\n  index: number,\r\n  file: any;\r\n  fileId: string;\r\n  size: number;\r\n  md5: string;\r\n  fileName: string;\r\n  extension: string;\r\n  downloadUrl: string;\r\n  previewUrl: string;\r\n}\r\n\r\ninterface UploadFileState {\r\n  OSSData: any;\r\n  fileList: Array<fileListType>;\r\n  files: any;\r\n  fileMd5: string;\r\n}\r\n\r\nexport default class UploadFile extends Component<UploadFileProps, UploadFileState> {\r\n \r\n  private child: any;\r\n \r\n  constructor(props: UploadFileProps) {\r\n    super(props);\r\n    this.state = {\r\n      OSSData: {},\r\n      fileList: props.fileList,\r\n      files: null,\r\n      fileMd5: '',\r\n    };\r\n\r\n    this.child = null;\r\n  }\r\n\r\n  componentDidMount() { \r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n\r\n  componentWillReceiveProps(props: any) {\r\n    if (JSON.stringify(props.fileList) !== JSON.stringify(this.state.fileList)) {\r\n      this.setState({\r\n        fileList: props.fileList,\r\n      });\r\n    }\r\n  }\r\n\r\n  // 更新上传文件数组\r\n  updateList = (fileObj: { file: fileListType; fileList: fileListType[] }) => {\r\n    this.setState(\r\n      {\r\n        fileList: fileObj.fileList,\r\n      },\r\n      () => {\r\n        this.onChangeFileList();\r\n      },\r\n    );\r\n  };\r\n\r\n  // 删除文件列表\r\n\r\n  OnDeleteFile = (id: string) => {\r\n    const { fileList } = this.state;\r\n\r\n    let newFileList = fileList.filter((item: fileListType) => {\r\n      return item.uid !== id;\r\n    });\r\n    this.setState({\r\n        fileList: newFileList,\r\n      },() => {\r\n        this.onChangeFileList();\r\n      },\r\n    );\r\n  };\r\n\r\n  // 增加删改的文件的时候，传出文件的值\r\n  onChangeFileList = () => {\r\n    const { fileList } = this.state;\r\n    this.props.onChangeFileList(fileList);\r\n  };\r\n\r\n  onCancelFile = (id: string) => {\r\n\r\n    const { fileList } = this.state;\r\n    let newFileList = fileList.filter((item: any) =>{\r\n      return item.id !== id;\r\n    });\r\n\r\n    this.setState({\r\n      fileList: newFileList\r\n    }, () => {\r\n      this.onChangeFileList();\r\n    }) \r\n\r\n  }\r\n\r\n  // 调用子组件中的上传函数\r\n  reUploadFile = (fileItem: any) => {\r\n    this.child.sendFiles(fileItem.file, fileItem.id);\r\n  }\r\n\r\n  // 获取文件图片\r\n  getExtensionImage = (fileItem: any) => {\r\n      \r\n    let fileType = 'unknownPic';\r\n    const getImg:any =  {\r\n        'ppt': pptPic,\r\n        'flash': flashPic,\r\n        'image': picturePic,\r\n        'video': videoPic,\r\n        'word': wordPic,\r\n        'audio': audioPic,\r\n        'zip':attachmentPic,\r\n        'gsp': gspPic,\r\n        'unknownPic': unknownPic,\r\n    };\r\n\r\n    for (const key in acceptName) {\r\n        if (Object.prototype.hasOwnProperty.call(acceptName, key) && Array.isArray(acceptName[key])) {\r\n          \r\n            const element = acceptName[key]?.reduce((string: any, item:string) => string + item?.toLowerCase(), '');\r\n            if (element.indexOf(fileItem) > -1) {\r\n                fileType = key;\r\n            }\r\n        }\r\n    }\r\n    return <img src={getImg[fileType]} />\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let { fileList, files } = this.state;\r\n\r\n    const { \r\n      url, \r\n      token, \r\n      fileNameLength, \r\n      accept='', \r\n      children=null,\r\n      maxSize=100, \r\n      multiple=true, \r\n      showLists=true,\r\n\r\n    } = this.props;\r\n\r\n    let newFileList = JSON.parse(JSON.stringify(fileList));\r\n\r\n    return (\r\n      <div className={\"fileContent\"}>\r\n        <div className={\"hasFileBotton\"} >\r\n\r\n          <UploadInput\r\n            accept={accept}\r\n            multiple={multiple}\r\n            fileList={fileList}\r\n            updateList={this.updateList}\r\n            maxSize={maxSize}\r\n            fileNameLength={fileNameLength}\r\n            url={url}\r\n            token={token}\r\n            onRef={(ref: any) => this.child = ref}\r\n            error={this.props.error}\r\n            onCancelFile={(id: string) => this.onCancelFile(id)}\r\n          >\r\n            {children}\r\n          </UploadInput>\r\n  \r\n        </div>\r\n        {\r\n          fileList.map((fileItem: any, index: number) => {\r\n      \r\n              return <div \r\n                  className={`${\"fileItemList\"} ${fileItem.status === 'error' ? \"err\" : ''}`} \r\n                  key={fileItem.id} \r\n                  title={fileItem.name}\r\n              >\r\n                  <div>\r\n                      {this.getExtensionImage(fileItem.extension)}\r\n                      <span className=\"fileName\">{fileItem.name}</span>\r\n                      {fileItem.status === 'ready' ? <Icon type=\"loading\" /> : ''}\r\n           \r\n                  </div>\r\n                  {\r\n                      fileItem.status === 'ready' || fileItem.status === 'uploading' || fileItem.status === 'error' ? <div className={\"progressClass\"}>\r\n                          <div>\r\n                              {/* <SyncOutlined spin /> */}\r\n                              <Progress\r\n                                  percent={fileItem.progress}\r\n                                  width={1100}\r\n                                  size=\"small\"\r\n                                  status=\"active\"\r\n                                  strokeColor=\"#FE8D29\"\r\n                                  trailColor=\"#D9D9D9\"\r\n                              />\r\n                          </div>\r\n                  \r\n                          {\r\n                              fileItem.status === 'error' ? <div className={\"oprationBtn\"} onClick={() => this.reUploadFile(fileItem)}>\r\n                                  重新上传\r\n                              </div> : <div></div>\r\n                          }\r\n                          <div className={\"oprationBtn\"} onClick={() => this.onCancelFile(fileItem.id)}>\r\n                              取消上传\r\n                      </div>\r\n                      </div> : ''\r\n                  }\r\n            \r\n              \r\n              </div>\r\n          })\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}]}